checking-account,duration,credit-history,purpose,credit-amount,savings-account,employment-since,installment-rate,other-debtors,residence-since,property,age,other-installment,housing,existing-credits,job,numner-people-provide-maintenance-for,telephone,foreign-worker,sex,marital-status,class-label
<0 DM,6,critical account,radio/television,1169,no savings account,>=7 years,4,none,4,real estate,67,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,48,existing credits paid back duly till now,radio/television,5951,<100 DM,1<= < 4 years,2,none,2,real estate,22,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,12,critical account,education,2096,<100 DM,4<= <7 years,2,none,3,real estate,49,none,own,1,unskilled - resident,2,none,yes,male,divorced/separated,1
<0 DM,42,existing credits paid back duly till now,furniture/equipment,7882,<100 DM,4<= <7 years,2,guarantor,4,savings agreement/life insurance,45,none,for free,1,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,24,delay in paying off,car (new),4870,<100 DM,1<= < 4 years,3,none,4,unknown / no property,53,none,for free,2,skilled employee / official,2,none,yes,male,divorced/separated,0
no account,36,existing credits paid back duly till now,education,9055,no savings account,1<= < 4 years,2,none,4,unknown / no property,35,none,for free,1,unskilled - resident,2,yes,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,furniture/equipment,2835,500 <= < 1000 DM,>=7 years,3,none,4,savings agreement/life insurance,53,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,36,existing credits paid back duly till now,car (used),6948,<100 DM,1<= < 4 years,2,none,2,car or other,35,none,rent,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,radio/television,3059,>= 1000 DM,4<= <7 years,2,none,4,real estate,61,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
0 <= <200 DM,30,critical account,car (new),5234,<100 DM,unemployed,4,none,2,car or other,28,none,own,2,management/ highly qualified employee,1,none,yes,male,married/widowed,0
0 <= <200 DM,12,existing credits paid back duly till now,car (new),1295,<100 DM,<1 years,3,none,1,car or other,25,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
<0 DM,48,existing credits paid back duly till now,business,4308,<100 DM,<1 years,3,none,4,savings agreement/life insurance,24,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,1567,<100 DM,1<= < 4 years,1,none,1,car or other,22,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,24,critical account,car (new),1199,<100 DM,>=7 years,4,none,4,car or other,60,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,0
<0 DM,15,existing credits paid back duly till now,car (new),1403,<100 DM,1<= < 4 years,2,none,4,car or other,28,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,radio/television,1282,100 <= <500 DM,1<= < 4 years,4,none,2,car or other,32,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,0
no account,24,critical account,radio/television,2424,no savings account,>=7 years,4,none,4,savings agreement/life insurance,53,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,30,no credits taken,business,8072,no savings account,<1 years,2,none,3,car or other,25,bank,own,3,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,car (used),12579,<100 DM,>=7 years,4,none,2,unknown / no property,44,none,for free,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
no account,24,existing credits paid back duly till now,radio/television,3430,500 <= < 1000 DM,>=7 years,3,none,2,car or other,31,none,own,1,skilled employee / official,2,yes,yes,male,divorced/separated,1
no account,9,critical account,car (new),2134,<100 DM,1<= < 4 years,4,none,4,car or other,48,none,own,3,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,6,existing credits paid back duly till now,radio/television,2647,500 <= < 1000 DM,1<= < 4 years,2,none,3,real estate,44,none,rent,1,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,10,critical account,car (new),2241,<100 DM,<1 years,1,none,3,real estate,48,none,rent,2,unskilled - resident,2,none,no,male,divorced/separated,1
0 <= <200 DM,12,critical account,car (used),1804,100 <= <500 DM,<1 years,3,none,4,savings agreement/life insurance,44,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,10,critical account,furniture/equipment,2069,no savings account,1<= < 4 years,2,none,1,car or other,26,none,own,2,skilled employee / official,1,none,no,male,married/widowed,1
<0 DM,6,existing credits paid back duly till now,furniture/equipment,1374,<100 DM,1<= < 4 years,1,none,2,real estate,36,bank,own,1,unskilled - resident,1,yes,yes,male,divorced/separated,1
no account,6,no credits taken,radio/television,426,<100 DM,>=7 years,4,none,4,car or other,39,none,own,1,unskilled - resident,1,none,yes,male,married/widowed,1
>= 200 DM ,12,all credits at this bank paid back duly,radio/television,409,>= 1000 DM,1<= < 4 years,3,none,3,real estate,42,none,rent,2,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,7,existing credits paid back duly till now,radio/television,2415,<100 DM,1<= < 4 years,3,guarantor,2,real estate,34,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,60,delay in paying off,business,6836,<100 DM,>=7 years,3,none,4,unknown / no property,63,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,18,existing credits paid back duly till now,business,1913,>= 1000 DM,<1 years,3,none,3,real estate,36,bank,own,1,skilled employee / official,1,yes,yes,male,married/widowed,1
<0 DM,24,existing credits paid back duly till now,furniture/equipment,4020,<100 DM,1<= < 4 years,2,none,2,car or other,27,store,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,car (new),5866,100 <= <500 DM,1<= < 4 years,2,none,2,car or other,30,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,12,critical account,business,1264,no savings account,>=7 years,4,none,4,unknown / no property,57,none,rent,1,unskilled - resident,1,none,yes,male,divorced/separated,1
>= 200 DM ,12,existing credits paid back duly till now,furniture/equipment,1474,<100 DM,<1 years,4,none,1,savings agreement/life insurance,33,bank,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,45,critical account,radio/television,4746,<100 DM,<1 years,4,none,2,savings agreement/life insurance,25,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,0
no account,48,critical account,education,6110,<100 DM,1<= < 4 years,1,none,3,unknown / no property,31,bank,for free,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
>= 200 DM ,18,existing credits paid back duly till now,radio/television,2100,<100 DM,1<= < 4 years,4,co-applicant,2,real estate,37,store,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
>= 200 DM ,10,existing credits paid back duly till now,domestic appliances,1225,<100 DM,1<= < 4 years,2,none,2,car or other,37,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,9,existing credits paid back duly till now,radio/television,458,<100 DM,1<= < 4 years,4,none,3,real estate,24,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,30,existing credits paid back duly till now,radio/television,2333,500 <= < 1000 DM,>=7 years,4,none,2,car or other,30,bank,own,1,management/ highly qualified employee,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,1158,500 <= < 1000 DM,1<= < 4 years,3,none,1,car or other,26,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,18,delay in paying off,repairs,6204,<100 DM,1<= < 4 years,2,none,4,real estate,44,none,own,1,unskilled - resident,2,yes,yes,male,divorced/separated,1
<0 DM,30,critical account,car (used),6187,100 <= <500 DM,4<= <7 years,1,none,4,car or other,24,none,rent,2,skilled employee / official,1,none,yes,male,married/widowed,1
<0 DM,48,critical account,car (used),6143,<100 DM,>=7 years,4,none,4,unknown / no property,58,store,for free,2,unskilled - resident,1,none,yes,female,divorced/separated,0
no account,11,critical account,car (new),1393,<100 DM,<1 years,4,none,4,car or other,35,none,own,2,management/ highly qualified employee,1,none,yes,female,divorced/separated,1
no account,36,existing credits paid back duly till now,radio/television,2299,500 <= < 1000 DM,>=7 years,4,none,4,car or other,39,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,6,existing credits paid back duly till now,car (used),1352,500 <= < 1000 DM,unemployed,1,none,2,savings agreement/life insurance,23,none,rent,1,unemployed/ unskilled  - non-resident,1,yes,yes,female,divorced/separated,1
no account,11,critical account,car (new),7228,<100 DM,1<= < 4 years,1,none,4,savings agreement/life insurance,39,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,radio/television,2073,100 <= <500 DM,1<= < 4 years,4,co-applicant,2,real estate,28,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,24,delay in paying off,furniture/equipment,2333,no savings account,<1 years,4,none,2,savings agreement/life insurance,29,bank,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
0 <= <200 DM,27,delay in paying off,car (used),5965,<100 DM,>=7 years,1,none,2,car or other,30,none,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,radio/television,1262,<100 DM,1<= < 4 years,3,none,2,car or other,25,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,car (used),3378,no savings account,1<= < 4 years,2,none,1,savings agreement/life insurance,31,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,36,delay in paying off,car (new),2225,<100 DM,>=7 years,4,none,4,unknown / no property,57,bank,for free,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,6,all credits at this bank paid back duly,car (new),783,no savings account,1<= < 4 years,1,guarantor,2,real estate,26,store,own,1,unskilled - resident,2,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,6468,no savings account,unemployed,2,none,1,unknown / no property,52,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,36,critical account,radio/television,9566,<100 DM,1<= < 4 years,2,none,2,car or other,31,store,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
>= 200 DM ,18,existing credits paid back duly till now,car (new),1961,<100 DM,>=7 years,3,none,2,car or other,23,none,own,1,management/ highly qualified employee,1,none,yes,female,divorced/separated,1
<0 DM,36,critical account,furniture/equipment,6229,<100 DM,<1 years,4,co-applicant,4,unknown / no property,23,none,rent,2,unskilled - resident,1,yes,yes,female,divorced/separated,0
0 <= <200 DM,9,existing credits paid back duly till now,business,1391,<100 DM,1<= < 4 years,2,none,1,real estate,27,bank,own,1,skilled employee / official,1,yes,yes,male,married/widowed,1
0 <= <200 DM,15,critical account,radio/television,1537,no savings account,>=7 years,4,guarantor,4,real estate,50,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,36,no credits taken,business,1953,<100 DM,>=7 years,4,none,4,unknown / no property,61,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,48,no credits taken,business,14421,<100 DM,1<= < 4 years,2,none,2,car or other,25,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,24,existing credits paid back duly till now,radio/television,3181,<100 DM,<1 years,4,none,4,savings agreement/life insurance,26,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,27,existing credits paid back duly till now,repairs,5190,no savings account,>=7 years,4,none,4,savings agreement/life insurance,48,none,own,4,skilled employee / official,2,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,radio/television,2171,<100 DM,<1 years,2,none,2,car or other,29,bank,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,car (new),1007,>= 1000 DM,1<= < 4 years,4,none,1,real estate,22,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,1
no account,36,existing credits paid back duly till now,education,1819,<100 DM,1<= < 4 years,4,none,4,unknown / no property,37,store,for free,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,36,existing credits paid back duly till now,radio/television,2394,no savings account,1<= < 4 years,4,none,4,car or other,25,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,36,existing credits paid back duly till now,car (used),8133,<100 DM,1<= < 4 years,1,none,2,savings agreement/life insurance,30,bank,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,7,critical account,radio/television,730,no savings account,>=7 years,4,none,2,savings agreement/life insurance,46,none,rent,2,unskilled - resident,1,yes,yes,male,divorced/separated,1
<0 DM,8,critical account,others,1164,<100 DM,>=7 years,3,none,4,unknown / no property,51,bank,for free,2,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
0 <= <200 DM,42,critical account,business,5954,<100 DM,4<= <7 years,2,none,1,real estate,41,bank,own,2,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,36,existing credits paid back duly till now,education,1977,no savings account,>=7 years,4,none,4,unknown / no property,40,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
<0 DM,12,critical account,car (used),1526,<100 DM,>=7 years,4,none,4,unknown / no property,66,none,for free,2,management/ highly qualified employee,1,none,yes,male,divorced/separated,1
<0 DM,42,existing credits paid back duly till now,radio/television,3965,<100 DM,<1 years,4,none,3,car or other,34,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,11,delay in paying off,radio/television,4771,<100 DM,4<= <7 years,2,none,4,savings agreement/life insurance,51,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,54,no credits taken,car (used),9436,no savings account,1<= < 4 years,2,none,2,savings agreement/life insurance,39,none,own,1,unskilled - resident,2,none,yes,male,divorced/separated,1
0 <= <200 DM,30,existing credits paid back duly till now,furniture/equipment,3832,<100 DM,<1 years,2,none,1,savings agreement/life insurance,22,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,1
no account,24,existing credits paid back duly till now,radio/television,5943,no savings account,<1 years,1,none,1,car or other,44,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,0
no account,15,existing credits paid back duly till now,radio/television,1213,500 <= < 1000 DM,>=7 years,4,none,3,savings agreement/life insurance,47,store,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,business,1568,100 <= <500 DM,1<= < 4 years,3,none,4,savings agreement/life insurance,24,none,rent,1,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,others,1755,<100 DM,>=7 years,4,guarantor,4,real estate,58,none,own,1,unskilled - resident,1,yes,yes,female,divorced/separated,1
<0 DM,10,existing credits paid back duly till now,radio/television,2315,<100 DM,>=7 years,3,none,4,real estate,52,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,12,critical account,business,1412,<100 DM,1<= < 4 years,4,guarantor,2,real estate,29,none,own,2,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,18,critical account,furniture/equipment,1295,<100 DM,<1 years,4,none,1,savings agreement/life insurance,27,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,36,existing credits paid back duly till now,education,12612,100 <= <500 DM,1<= < 4 years,1,none,4,unknown / no property,47,none,for free,1,skilled employee / official,2,yes,yes,male,divorced/separated,0
<0 DM,18,existing credits paid back duly till now,car (new),2249,100 <= <500 DM,4<= <7 years,4,none,3,car or other,30,none,own,1,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
<0 DM,12,no credits taken,repairs,1108,<100 DM,4<= <7 years,4,none,3,real estate,28,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,12,critical account,radio/television,618,<100 DM,>=7 years,4,none,4,real estate,56,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,12,critical account,car (used),1409,<100 DM,>=7 years,4,none,3,real estate,54,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,12,critical account,radio/television,797,no savings account,>=7 years,4,none,3,savings agreement/life insurance,33,bank,own,1,unskilled - resident,2,none,yes,female,divorced/separated,0
>= 200 DM ,24,critical account,furniture/equipment,3617,no savings account,>=7 years,4,co-applicant,4,unknown / no property,20,none,rent,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,car (new),1318,>= 1000 DM,>=7 years,4,none,4,real estate,54,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,54,no credits taken,business,15945,<100 DM,<1 years,3,none,4,unknown / no property,58,none,rent,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,12,critical account,education,2012,no savings account,4<= <7 years,4,none,2,car or other,61,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,business,2622,100 <= <500 DM,1<= < 4 years,4,none,4,car or other,34,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,36,critical account,radio/television,2337,<100 DM,>=7 years,4,none,4,real estate,36,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,20,delay in paying off,car (used),7057,no savings account,4<= <7 years,3,none,4,savings agreement/life insurance,36,bank,rent,2,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,car (new),1469,100 <= <500 DM,>=7 years,4,none,4,real estate,41,none,rent,1,unskilled - resident,1,none,yes,male,married/widowed,1
0 <= <200 DM,36,existing credits paid back duly till now,radio/television,2323,<100 DM,4<= <7 years,4,none,4,car or other,24,none,rent,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,6,delay in paying off,radio/television,932,<100 DM,1<= < 4 years,3,none,2,real estate,24,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,9,critical account,furniture/equipment,1919,<100 DM,4<= <7 years,4,none,3,car or other,35,none,rent,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,car (used),2445,no savings account,<1 years,2,none,4,car or other,26,none,rent,1,skilled employee / official,1,yes,yes,male,married/widowed,1
0 <= <200 DM,24,critical account,others,11938,<100 DM,1<= < 4 years,2,co-applicant,3,car or other,39,none,own,2,management/ highly qualified employee,2,yes,yes,male,divorced/separated,0
no account,18,all credits at this bank paid back duly,car (new),6458,<100 DM,>=7 years,2,none,4,unknown / no property,39,bank,own,2,management/ highly qualified employee,2,yes,yes,male,divorced/separated,0
0 <= <200 DM,12,existing credits paid back duly till now,car (new),6078,<100 DM,4<= <7 years,2,none,2,car or other,32,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,furniture/equipment,7721,no savings account,<1 years,1,none,2,savings agreement/life insurance,30,none,own,1,skilled employee / official,1,yes,no,female,divorced/separated,1
0 <= <200 DM,14,existing credits paid back duly till now,business,1410,500 <= < 1000 DM,>=7 years,1,none,2,real estate,35,none,own,1,skilled employee / official,1,yes,yes,male,married/widowed,1
0 <= <200 DM,6,delay in paying off,business,1449,100 <= <500 DM,>=7 years,1,none,2,car or other,31,bank,own,2,skilled employee / official,2,none,yes,male,divorced/separated,1
>= 200 DM ,15,existing credits paid back duly till now,education,392,<100 DM,<1 years,4,none,4,savings agreement/life insurance,23,none,rent,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,car (new),6260,<100 DM,4<= <7 years,3,none,3,real estate,28,none,rent,1,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,36,critical account,car (new),7855,<100 DM,1<= < 4 years,4,none,2,real estate,25,store,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,0
<0 DM,12,existing credits paid back duly till now,radio/television,1680,500 <= < 1000 DM,>=7 years,3,none,1,real estate,35,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,1
no account,48,critical account,radio/television,3578,no savings account,>=7 years,4,none,1,real estate,47,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,42,existing credits paid back duly till now,radio/television,7174,no savings account,4<= <7 years,4,none,3,car or other,30,none,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
<0 DM,10,critical account,furniture/equipment,2132,no savings account,<1 years,2,co-applicant,3,real estate,27,none,rent,2,skilled employee / official,1,none,no,female,divorced/separated,1
<0 DM,33,critical account,furniture/equipment,4281,500 <= < 1000 DM,1<= < 4 years,1,none,4,car or other,23,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,12,critical account,car (new),2366,500 <= < 1000 DM,4<= <7 years,3,none,3,car or other,36,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,21,existing credits paid back duly till now,radio/television,1835,<100 DM,1<= < 4 years,3,none,2,real estate,25,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,0
no account,24,critical account,car (used),3868,<100 DM,>=7 years,4,none,2,car or other,41,none,rent,2,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
no account,12,existing credits paid back duly till now,furniture/equipment,1768,<100 DM,1<= < 4 years,3,none,2,real estate,24,none,rent,1,unskilled - resident,1,none,yes,male,divorced/separated,1
>= 200 DM ,10,critical account,car (new),781,<100 DM,>=7 years,4,none,4,unknown / no property,63,none,for free,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,furniture/equipment,1924,no savings account,<1 years,4,none,3,real estate,27,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
<0 DM,12,critical account,car (new),2121,<100 DM,1<= < 4 years,4,none,2,savings agreement/life insurance,30,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,radio/television,701,<100 DM,1<= < 4 years,4,none,2,real estate,40,none,own,1,unskilled - resident,1,none,yes,male,married/widowed,1
0 <= <200 DM,12,existing credits paid back duly till now,repairs,639,<100 DM,1<= < 4 years,4,none,2,car or other,30,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,12,critical account,car (used),1860,<100 DM,unemployed,4,none,2,car or other,34,none,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,12,critical account,car (new),3499,<100 DM,1<= < 4 years,3,co-applicant,2,real estate,29,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,48,existing credits paid back duly till now,car (new),8487,no savings account,4<= <7 years,1,none,2,car or other,24,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,36,delay in paying off,education,6887,<100 DM,1<= < 4 years,4,none,3,savings agreement/life insurance,29,store,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,15,existing credits paid back duly till now,furniture/equipment,2708,<100 DM,<1 years,2,none,3,savings agreement/life insurance,27,bank,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,furniture/equipment,1984,<100 DM,1<= < 4 years,4,none,4,unknown / no property,47,bank,for free,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,60,existing credits paid back duly till now,radio/television,10144,100 <= <500 DM,4<= <7 years,2,none,4,real estate,21,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,12,critical account,radio/television,1240,no savings account,>=7 years,4,none,2,real estate,38,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,27,delay in paying off,car (used),8613,>= 1000 DM,1<= < 4 years,2,none,2,car or other,27,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,766,500 <= < 1000 DM,1<= < 4 years,4,none,3,real estate,66,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,0
0 <= <200 DM,15,critical account,radio/television,2728,no savings account,4<= <7 years,4,guarantor,2,real estate,35,bank,own,3,skilled employee / official,1,yes,yes,male,divorced/separated,1
>= 200 DM ,12,existing credits paid back duly till now,radio/television,1881,<100 DM,1<= < 4 years,2,none,2,car or other,44,none,rent,1,unskilled - resident,1,yes,yes,female,divorced/separated,1
>= 200 DM ,6,existing credits paid back duly till now,car (new),709,>= 1000 DM,<1 years,2,none,2,real estate,27,none,own,1,unemployed/ unskilled  - non-resident,1,none,no,male,married/widowed,1
0 <= <200 DM,36,existing credits paid back duly till now,radio/television,4795,<100 DM,<1 years,4,none,1,unknown / no property,30,none,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
<0 DM,27,existing credits paid back duly till now,radio/television,3416,<100 DM,1<= < 4 years,3,none,2,car or other,27,none,own,1,management/ highly qualified employee,1,none,yes,male,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,furniture/equipment,2462,<100 DM,1<= < 4 years,2,none,2,car or other,22,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,21,critical account,furniture/equipment,2288,<100 DM,<1 years,4,none,4,savings agreement/life insurance,23,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,48,all credits at this bank paid back duly,business,3566,100 <= <500 DM,4<= <7 years,4,none,2,car or other,30,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,6,critical account,car (new),860,<100 DM,>=7 years,1,none,4,unknown / no property,39,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,12,critical account,car (new),682,100 <= <500 DM,4<= <7 years,4,none,3,car or other,51,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,36,critical account,furniture/equipment,5371,<100 DM,1<= < 4 years,3,guarantor,2,savings agreement/life insurance,28,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,critical account,radio/television,1582,>= 1000 DM,>=7 years,4,none,4,car or other,46,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,6,existing credits paid back duly till now,radio/television,1346,100 <= <500 DM,>=7 years,2,none,4,unknown / no property,42,bank,for free,1,skilled employee / official,2,yes,yes,male,divorced/separated,1
no account,10,existing credits paid back duly till now,radio/television,1924,<100 DM,1<= < 4 years,1,none,4,savings agreement/life insurance,38,none,own,1,skilled employee / official,1,yes,no,male,divorced/separated,1
>= 200 DM ,36,existing credits paid back duly till now,radio/television,5848,<100 DM,1<= < 4 years,4,none,1,car or other,24,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,24,critical account,car (used),7758,>= 1000 DM,>=7 years,2,none,4,unknown / no property,29,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,24,delay in paying off,business,6967,100 <= <500 DM,4<= <7 years,4,none,4,car or other,36,none,rent,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,furniture/equipment,1282,<100 DM,1<= < 4 years,2,none,4,car or other,20,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
<0 DM,9,critical account,repairs,1288,100 <= <500 DM,>=7 years,3,guarantor,4,real estate,48,none,own,2,skilled employee / official,2,none,no,male,divorced/separated,1
<0 DM,12,all credits at this bank paid back duly,retraining,339,<100 DM,>=7 years,4,none,1,car or other,45,bank,own,1,unskilled - resident,1,none,yes,male,married/widowed,1
0 <= <200 DM,24,existing credits paid back duly till now,car (new),3512,100 <= <500 DM,4<= <7 years,2,none,3,car or other,38,bank,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,6,critical account,radio/television,1898,no savings account,1<= < 4 years,1,none,2,real estate,34,none,own,2,unskilled - resident,2,none,yes,male,divorced/separated,1
no account,24,critical account,radio/television,2872,100 <= <500 DM,>=7 years,3,none,4,real estate,36,none,own,1,skilled employee / official,2,yes,yes,male,divorced/separated,1
no account,18,critical account,car (new),1055,<100 DM,<1 years,4,none,1,savings agreement/life insurance,30,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,15,existing credits paid back duly till now,domestic appliances,1262,500 <= < 1000 DM,4<= <7 years,4,none,3,savings agreement/life insurance,36,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,10,existing credits paid back duly till now,car (new),7308,<100 DM,unemployed,2,none,4,unknown / no property,70,bank,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,36,existing credits paid back duly till now,car (new),909,500 <= < 1000 DM,>=7 years,4,none,4,savings agreement/life insurance,36,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,6,existing credits paid back duly till now,furniture/equipment,2978,500 <= < 1000 DM,1<= < 4 years,1,none,2,car or other,32,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,furniture/equipment,1131,<100 DM,unemployed,4,none,2,car or other,33,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,11,existing credits paid back duly till now,furniture/equipment,1577,>= 1000 DM,<1 years,4,none,1,real estate,20,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,24,existing credits paid back duly till now,furniture/equipment,3972,<100 DM,4<= <7 years,2,none,4,savings agreement/life insurance,25,none,rent,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,24,critical account,business,1935,<100 DM,>=7 years,4,none,4,real estate,31,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
<0 DM,15,no credits taken,car (new),950,<100 DM,>=7 years,4,none,3,car or other,33,none,rent,2,skilled employee / official,2,none,yes,male,divorced/separated,0
no account,12,existing credits paid back duly till now,furniture/equipment,763,<100 DM,1<= < 4 years,4,none,1,real estate,26,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,24,delay in paying off,furniture/equipment,2064,<100 DM,unemployed,3,none,2,savings agreement/life insurance,34,none,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
0 <= <200 DM,8,existing credits paid back duly till now,radio/television,1414,<100 DM,1<= < 4 years,4,guarantor,2,real estate,33,none,own,1,skilled employee / official,1,none,no,male,divorced/separated,1
<0 DM,21,delay in paying off,education,3414,<100 DM,<1 years,2,none,1,savings agreement/life insurance,26,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,30,all credits at this bank paid back duly,car (used),7485,no savings account,unemployed,4,none,1,real estate,53,bank,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
<0 DM,12,existing credits paid back duly till now,furniture/equipment,2577,<100 DM,1<= < 4 years,2,none,1,car or other,42,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,6,critical account,radio/television,338,500 <= < 1000 DM,>=7 years,4,none,4,car or other,52,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,radio/television,1963,<100 DM,4<= <7 years,4,none,2,car or other,31,none,rent,2,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
<0 DM,21,critical account,car (new),571,<100 DM,>=7 years,4,none,4,real estate,65,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,36,delay in paying off,business,9572,<100 DM,<1 years,1,none,1,car or other,28,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,36,delay in paying off,business,4455,<100 DM,1<= < 4 years,2,none,2,real estate,30,store,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
<0 DM,21,all credits at this bank paid back duly,car (new),1647,no savings account,1<= < 4 years,4,none,2,savings agreement/life insurance,40,none,own,2,unskilled - resident,2,none,yes,male,divorced/separated,0
no account,24,critical account,furniture/equipment,3777,>= 1000 DM,1<= < 4 years,4,none,4,real estate,50,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,18,critical account,car (new),884,<100 DM,>=7 years,4,none,4,car or other,36,bank,own,1,skilled employee / official,2,yes,yes,male,divorced/separated,0
no account,15,critical account,radio/television,1360,<100 DM,1<= < 4 years,4,none,2,savings agreement/life insurance,31,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,9,all credits at this bank paid back duly,car (used),5129,<100 DM,>=7 years,2,none,4,unknown / no property,74,bank,for free,1,management/ highly qualified employee,2,yes,yes,female,divorced/separated,0
0 <= <200 DM,16,critical account,car (new),1175,<100 DM,unemployed,2,none,3,car or other,68,none,for free,3,unemployed/ unskilled  - non-resident,1,yes,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,radio/television,674,100 <= <500 DM,4<= <7 years,4,none,1,savings agreement/life insurance,20,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,0
0 <= <200 DM,18,no credits taken,furniture/equipment,3244,<100 DM,1<= < 4 years,1,none,4,car or other,33,bank,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,24,existing credits paid back duly till now,business,4591,>= 1000 DM,1<= < 4 years,2,none,3,savings agreement/life insurance,54,none,own,3,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,48,no credits taken,business,3844,100 <= <500 DM,4<= <7 years,4,none,4,unknown / no property,34,none,for free,1,unskilled - resident,2,none,yes,male,divorced/separated,0
0 <= <200 DM,27,existing credits paid back duly till now,business,3915,<100 DM,1<= < 4 years,4,none,2,car or other,36,none,own,1,skilled employee / official,2,yes,yes,male,divorced/separated,0
no account,6,existing credits paid back duly till now,radio/television,2108,<100 DM,4<= <7 years,2,none,2,real estate,29,none,rent,1,skilled employee / official,1,none,yes,male,married/widowed,1
0 <= <200 DM,45,existing credits paid back duly till now,radio/television,3031,100 <= <500 DM,1<= < 4 years,4,guarantor,4,savings agreement/life insurance,21,none,rent,1,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,9,critical account,education,1501,<100 DM,>=7 years,2,none,3,car or other,34,none,own,2,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
no account,6,critical account,radio/television,1382,<100 DM,1<= < 4 years,1,none,1,car or other,28,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,furniture/equipment,951,100 <= <500 DM,<1 years,4,none,4,car or other,27,bank,rent,4,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,24,existing credits paid back duly till now,car (used),2760,no savings account,>=7 years,4,none,4,unknown / no property,36,bank,for free,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,18,delay in paying off,furniture/equipment,4297,<100 DM,>=7 years,4,none,3,unknown / no property,40,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,9,critical account,education,936,500 <= < 1000 DM,>=7 years,4,none,2,car or other,52,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,car (new),1168,<100 DM,1<= < 4 years,4,none,3,real estate,27,none,own,1,unskilled - resident,1,none,yes,male,married/widowed,1
no account,27,delay in paying off,business,5117,<100 DM,4<= <7 years,3,none,4,car or other,26,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,retraining,902,<100 DM,4<= <7 years,4,none,4,savings agreement/life insurance,21,none,rent,1,skilled employee / official,1,none,yes,male,married/widowed,0
no account,12,critical account,car (new),1495,<100 DM,>=7 years,4,none,1,real estate,38,none,own,2,unskilled - resident,2,none,yes,male,divorced/separated,1
<0 DM,30,critical account,car (used),10623,<100 DM,>=7 years,3,none,4,unknown / no property,38,none,for free,3,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
no account,12,critical account,furniture/equipment,1935,<100 DM,>=7 years,4,none,4,real estate,43,none,own,3,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,12,critical account,domestic appliances,1424,<100 DM,4<= <7 years,4,none,3,savings agreement/life insurance,26,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,business,6568,<100 DM,1<= < 4 years,2,none,2,car or other,21,store,own,1,unskilled - resident,1,none,yes,male,married/widowed,1
no account,12,existing credits paid back duly till now,car (used),1413,>= 1000 DM,4<= <7 years,3,none,2,savings agreement/life insurance,55,none,own,1,skilled employee / official,1,none,no,male,divorced/separated,1
no account,9,critical account,radio/television,3074,no savings account,1<= < 4 years,1,none,2,real estate,33,none,own,2,skilled employee / official,2,none,yes,male,divorced/separated,1
no account,36,existing credits paid back duly till now,radio/television,3835,no savings account,>=7 years,2,none,4,real estate,45,none,own,1,unskilled - resident,1,yes,yes,female,divorced/separated,1
<0 DM,27,no credits taken,business,5293,<100 DM,unemployed,2,none,4,savings agreement/life insurance,50,store,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
>= 200 DM ,30,delay in paying off,business,1908,<100 DM,>=7 years,4,none,4,real estate,66,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,36,critical account,radio/television,3342,no savings account,>=7 years,4,none,2,car or other,51,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,6,critical account,retraining,932,no savings account,4<= <7 years,1,none,3,savings agreement/life insurance,39,none,own,2,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,18,no credits taken,business,3104,<100 DM,4<= <7 years,3,none,1,savings agreement/life insurance,31,bank,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
>= 200 DM ,36,existing credits paid back duly till now,radio/television,3913,<100 DM,1<= < 4 years,2,none,2,real estate,23,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,furniture/equipment,3021,<100 DM,1<= < 4 years,2,none,2,real estate,24,none,rent,1,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,10,existing credits paid back duly till now,car (new),1364,<100 DM,1<= < 4 years,2,none,4,car or other,64,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,625,<100 DM,<1 years,4,guarantor,1,real estate,26,bank,own,1,unskilled - resident,1,none,yes,male,married/widowed,1
<0 DM,12,existing credits paid back duly till now,education,1200,no savings account,1<= < 4 years,4,none,4,savings agreement/life insurance,23,bank,rent,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,12,existing credits paid back duly till now,radio/television,707,<100 DM,1<= < 4 years,4,none,2,real estate,30,bank,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,delay in paying off,business,2978,no savings account,1<= < 4 years,4,none,4,real estate,32,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
no account,15,existing credits paid back duly till now,car (used),4657,<100 DM,1<= < 4 years,3,none,2,car or other,30,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,36,no credits taken,repairs,2613,<100 DM,1<= < 4 years,4,none,2,car or other,27,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,48,existing credits paid back duly till now,radio/television,10961,>= 1000 DM,4<= <7 years,1,co-applicant,2,unknown / no property,27,bank,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
<0 DM,12,existing credits paid back duly till now,furniture/equipment,7865,<100 DM,>=7 years,4,none,4,unknown / no property,53,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,9,existing credits paid back duly till now,radio/television,1478,<100 DM,4<= <7 years,4,none,2,car or other,22,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,furniture/equipment,3149,<100 DM,<1 years,4,none,1,unknown / no property,22,bank,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,1
>= 200 DM ,36,existing credits paid back duly till now,radio/television,4210,<100 DM,1<= < 4 years,4,none,2,car or other,26,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,9,existing credits paid back duly till now,car (new),2507,500 <= < 1000 DM,>=7 years,2,none,4,unknown / no property,51,none,for free,1,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,radio/television,2141,100 <= <500 DM,4<= <7 years,3,none,1,unknown / no property,35,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,radio/television,866,<100 DM,1<= < 4 years,4,guarantor,2,real estate,25,none,own,1,unskilled - resident,1,none,yes,male,married/widowed,1
no account,4,critical account,radio/television,1544,<100 DM,4<= <7 years,2,none,1,real estate,42,none,own,3,unskilled - resident,2,none,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,radio/television,1823,<100 DM,unemployed,4,none,2,car or other,30,store,own,1,management/ highly qualified employee,2,none,yes,male,divorced/separated,0
0 <= <200 DM,6,existing credits paid back duly till now,car (new),14555,no savings account,unemployed,1,none,2,savings agreement/life insurance,23,none,own,1,unemployed/ unskilled  - non-resident,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,21,existing credits paid back duly till now,business,2767,100 <= <500 DM,>=7 years,4,none,2,car or other,61,bank,rent,2,unskilled - resident,1,none,yes,male,divorced/separated,0
no account,12,critical account,radio/television,1291,<100 DM,1<= < 4 years,4,none,2,savings agreement/life insurance,35,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,30,existing credits paid back duly till now,radio/television,2522,<100 DM,>=7 years,1,guarantor,3,savings agreement/life insurance,39,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,car (new),915,no savings account,>=7 years,4,none,2,car or other,29,bank,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,6,existing credits paid back duly till now,radio/television,1595,<100 DM,4<= <7 years,3,none,2,savings agreement/life insurance,51,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,48,no credits taken,car (used),4605,<100 DM,>=7 years,3,none,4,unknown / no property,24,none,for free,2,skilled employee / official,2,none,yes,male,divorced/separated,0
no account,12,critical account,business,1185,<100 DM,1<= < 4 years,3,none,2,real estate,27,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,12,all credits at this bank paid back duly,retraining,3447,500 <= < 1000 DM,1<= < 4 years,4,none,3,real estate,35,none,own,1,unskilled - resident,2,none,yes,female,divorced/separated,1
no account,24,existing credits paid back duly till now,business,1258,<100 DM,4<= <7 years,4,none,1,real estate,25,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,12,critical account,radio/television,717,<100 DM,>=7 years,4,none,4,real estate,52,none,own,3,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,6,no credits taken,car (new),1204,100 <= <500 DM,1<= < 4 years,4,none,1,unknown / no property,35,bank,rent,1,skilled employee / official,1,none,no,male,divorced/separated,1
>= 200 DM ,24,existing credits paid back duly till now,furniture/equipment,1925,<100 DM,1<= < 4 years,2,none,2,real estate,26,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,radio/television,433,<100 DM,unemployed,3,co-applicant,4,real estate,22,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
<0 DM,6,critical account,car (new),666,>= 1000 DM,4<= <7 years,3,none,4,real estate,39,none,own,2,unskilled - resident,1,yes,yes,female,divorced/separated,1
>= 200 DM ,12,existing credits paid back duly till now,furniture/equipment,2251,<100 DM,1<= < 4 years,1,none,2,car or other,46,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,30,existing credits paid back duly till now,car (new),2150,<100 DM,1<= < 4 years,4,guarantor,2,unknown / no property,24,bank,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,24,delay in paying off,furniture/equipment,4151,100 <= <500 DM,1<= < 4 years,2,none,3,savings agreement/life insurance,35,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,9,existing credits paid back duly till now,furniture/equipment,2030,no savings account,4<= <7 years,2,none,1,car or other,24,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,60,delay in paying off,radio/television,7418,no savings account,1<= < 4 years,1,none,1,real estate,27,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,24,critical account,radio/television,2684,<100 DM,1<= < 4 years,4,none,2,real estate,35,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
<0 DM,12,all credits at this bank paid back duly,radio/television,2149,<100 DM,1<= < 4 years,4,none,1,unknown / no property,29,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,15,existing credits paid back duly till now,car (used),3812,100 <= <500 DM,<1 years,1,none,4,car or other,23,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,11,critical account,radio/television,1154,100 <= <500 DM,unemployed,4,none,4,real estate,57,none,own,3,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,furniture/equipment,1657,<100 DM,1<= < 4 years,2,none,2,real estate,27,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,radio/television,1603,<100 DM,>=7 years,4,none,4,car or other,55,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,18,critical account,car (new),5302,<100 DM,>=7 years,2,none,4,unknown / no property,36,none,for free,3,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,12,critical account,education,2748,<100 DM,>=7 years,2,none,4,unknown / no property,57,bank,for free,3,unskilled - resident,1,none,yes,female,divorced/separated,1
no account,10,critical account,car (new),1231,<100 DM,>=7 years,3,none,4,real estate,32,none,own,2,unskilled - resident,2,none,no,male,divorced/separated,1
0 <= <200 DM,15,existing credits paid back duly till now,radio/television,802,<100 DM,>=7 years,4,none,3,car or other,37,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,0
no account,36,critical account,business,6304,no savings account,>=7 years,4,none,4,real estate,36,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,radio/television,1533,<100 DM,<1 years,4,none,3,car or other,38,store,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,14,existing credits paid back duly till now,car (new),8978,<100 DM,>=7 years,1,none,4,savings agreement/life insurance,45,none,own,1,management/ highly qualified employee,1,yes,no,male,divorced/separated,0
no account,24,existing credits paid back duly till now,radio/television,999,no savings account,>=7 years,4,none,2,car or other,25,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,car (new),2662,no savings account,4<= <7 years,4,none,3,savings agreement/life insurance,32,none,own,1,skilled employee / official,1,none,no,male,divorced/separated,1
no account,12,critical account,furniture/equipment,1402,500 <= < 1000 DM,4<= <7 years,3,none,4,car or other,37,none,rent,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,48,all credits at this bank paid back duly,car (new),12169,no savings account,unemployed,4,co-applicant,4,unknown / no property,36,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,48,existing credits paid back duly till now,radio/television,3060,<100 DM,4<= <7 years,4,none,4,real estate,28,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,30,existing credits paid back duly till now,repairs,11998,<100 DM,<1 years,1,none,1,unknown / no property,34,none,own,1,unskilled - resident,1,yes,yes,male,divorced/separated,0
no account,9,existing credits paid back duly till now,radio/television,2697,<100 DM,1<= < 4 years,1,none,2,real estate,32,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,1
no account,18,critical account,radio/television,2404,<100 DM,1<= < 4 years,2,none,2,car or other,26,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,furniture/equipment,1262,no savings account,>=7 years,2,none,4,savings agreement/life insurance,49,none,own,1,unskilled - resident,1,yes,yes,male,divorced/separated,1
no account,6,existing credits paid back duly till now,furniture/equipment,4611,<100 DM,<1 years,1,none,4,savings agreement/life insurance,32,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,24,existing credits paid back duly till now,radio/television,1901,100 <= <500 DM,1<= < 4 years,4,none,4,car or other,29,none,rent,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,15,critical account,car (used),3368,>= 1000 DM,>=7 years,3,none,4,unknown / no property,23,none,rent,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,furniture/equipment,1574,<100 DM,1<= < 4 years,4,none,2,real estate,50,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
>= 200 DM ,18,all credits at this bank paid back duly,radio/television,1445,no savings account,4<= <7 years,4,none,4,car or other,49,bank,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,15,critical account,furniture/equipment,1520,no savings account,>=7 years,4,none,4,savings agreement/life insurance,63,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,24,critical account,car (new),3878,100 <= <500 DM,<1 years,4,none,2,car or other,37,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,47,existing credits paid back duly till now,car (new),10722,<100 DM,<1 years,1,none,1,real estate,35,none,own,1,unskilled - resident,1,yes,yes,female,divorced/separated,1
<0 DM,48,existing credits paid back duly till now,car (used),4788,<100 DM,4<= <7 years,4,none,3,savings agreement/life insurance,26,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,1
0 <= <200 DM,48,delay in paying off,others,7582,100 <= <500 DM,unemployed,2,none,4,unknown / no property,31,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,1092,<100 DM,1<= < 4 years,4,guarantor,4,real estate,49,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,24,delay in paying off,radio/television,1024,<100 DM,<1 years,4,none,4,real estate,48,store,own,1,skilled employee / official,1,none,yes,male,married/widowed,0
no account,12,existing credits paid back duly till now,business,1076,<100 DM,1<= < 4 years,2,none,2,real estate,26,none,own,1,skilled employee / official,1,yes,no,male,married/widowed,1
0 <= <200 DM,36,existing credits paid back duly till now,car (used),9398,<100 DM,<1 years,1,none,4,car or other,28,none,rent,1,management/ highly qualified employee,1,yes,yes,male,married/widowed,0
<0 DM,24,critical account,car (used),6419,<100 DM,>=7 years,2,none,4,unknown / no property,44,none,for free,2,management/ highly qualified employee,2,yes,yes,female,divorced/separated,1
>= 200 DM ,42,critical account,car (used),4796,<100 DM,>=7 years,4,none,4,unknown / no property,56,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,48,critical account,business,7629,no savings account,>=7 years,4,none,2,car or other,46,bank,own,2,management/ highly qualified employee,2,none,yes,male,divorced/separated,1
0 <= <200 DM,48,existing credits paid back duly till now,furniture/equipment,9960,<100 DM,<1 years,1,none,2,car or other,26,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,0
no account,12,existing credits paid back duly till now,car (used),4675,no savings account,<1 years,1,none,4,car or other,20,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,10,existing credits paid back duly till now,car (new),1287,no savings account,>=7 years,4,co-applicant,2,savings agreement/life insurance,45,none,own,1,unskilled - resident,1,none,no,male,divorced/separated,1
no account,18,existing credits paid back duly till now,furniture/equipment,2515,<100 DM,1<= < 4 years,3,none,4,real estate,43,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,21,critical account,furniture/equipment,2745,>= 1000 DM,4<= <7 years,3,none,2,car or other,32,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,6,existing credits paid back duly till now,car (new),672,<100 DM,unemployed,1,none,4,real estate,54,none,own,1,unemployed/ unskilled  - non-resident,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,36,no credits taken,radio/television,3804,<100 DM,1<= < 4 years,4,none,1,car or other,42,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,0
>= 200 DM ,24,critical account,car (new),1344,no savings account,4<= <7 years,4,none,2,real estate,37,bank,own,2,unskilled - resident,2,none,yes,male,divorced/separated,0
<0 DM,10,critical account,car (new),1038,<100 DM,4<= <7 years,4,co-applicant,3,savings agreement/life insurance,49,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,48,critical account,car (new),10127,500 <= < 1000 DM,1<= < 4 years,2,none,2,unknown / no property,44,bank,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,6,existing credits paid back duly till now,furniture/equipment,1543,>= 1000 DM,1<= < 4 years,4,none,2,real estate,33,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,30,existing credits paid back duly till now,car (used),4811,no savings account,4<= <7 years,2,none,4,savings agreement/life insurance,24,store,rent,1,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,radio/television,727,100 <= <500 DM,<1 years,4,none,3,unknown / no property,33,none,own,1,unskilled - resident,1,yes,yes,male,married/widowed,0
0 <= <200 DM,8,existing credits paid back duly till now,furniture/equipment,1237,<100 DM,1<= < 4 years,3,none,4,real estate,24,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,9,existing credits paid back duly till now,car (new),276,<100 DM,1<= < 4 years,4,none,4,real estate,22,none,rent,1,unskilled - resident,1,none,yes,male,married/widowed,1
0 <= <200 DM,48,existing credits paid back duly till now,others,5381,no savings account,unemployed,3,none,4,unknown / no property,40,bank,for free,1,unemployed/ unskilled  - non-resident,1,yes,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,furniture/equipment,5511,100 <= <500 DM,1<= < 4 years,4,none,1,car or other,25,store,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
>= 200 DM ,24,existing credits paid back duly till now,furniture/equipment,3749,<100 DM,<1 years,2,none,4,car or other,26,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,car (new),685,<100 DM,4<= <7 years,2,none,3,car or other,25,bank,own,1,unskilled - resident,1,none,yes,male,married/widowed,0
>= 200 DM ,4,existing credits paid back duly till now,car (new),1494,no savings account,<1 years,1,none,2,real estate,29,none,own,1,unskilled - resident,2,none,no,male,divorced/separated,1
<0 DM,36,all credits at this bank paid back duly,furniture/equipment,2746,<100 DM,>=7 years,4,none,4,car or other,31,bank,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,12,existing credits paid back duly till now,furniture/equipment,708,<100 DM,1<= < 4 years,2,guarantor,3,savings agreement/life insurance,38,none,own,1,unskilled - resident,2,none,yes,male,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,furniture/equipment,4351,no savings account,1<= < 4 years,1,none,4,savings agreement/life insurance,48,none,own,1,unskilled - resident,1,yes,yes,female,divorced/separated,1
no account,12,critical account,education,701,<100 DM,1<= < 4 years,4,none,2,car or other,32,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,15,delay in paying off,furniture/equipment,3643,<100 DM,>=7 years,1,none,4,savings agreement/life insurance,27,none,own,2,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,30,critical account,car (new),4249,<100 DM,unemployed,4,none,2,car or other,28,none,own,2,management/ highly qualified employee,1,none,yes,male,married/widowed,0
<0 DM,24,existing credits paid back duly till now,radio/television,1938,<100 DM,<1 years,4,none,3,savings agreement/life insurance,32,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,car (used),2910,<100 DM,4<= <7 years,2,none,1,unknown / no property,34,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,furniture/equipment,2659,>= 1000 DM,1<= < 4 years,4,none,2,car or other,28,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,critical account,car (new),1028,<100 DM,1<= < 4 years,4,none,3,real estate,36,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,8,critical account,car (new),3398,<100 DM,4<= <7 years,1,none,4,real estate,39,none,own,2,unskilled - resident,1,none,no,male,divorced/separated,1
no account,12,critical account,furniture/equipment,5801,no savings account,>=7 years,2,none,4,savings agreement/life insurance,49,none,rent,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,car (new),1525,>= 1000 DM,4<= <7 years,4,none,3,car or other,34,none,own,1,skilled employee / official,2,yes,yes,female,divorced/separated,1
>= 200 DM ,36,existing credits paid back duly till now,radio/television,4473,<100 DM,>=7 years,4,none,2,car or other,31,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,6,existing credits paid back duly till now,radio/television,1068,<100 DM,>=7 years,4,none,4,car or other,28,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,24,critical account,car (used),6615,<100 DM,unemployed,2,none,4,unknown / no property,75,none,for free,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,18,critical account,education,1864,100 <= <500 DM,1<= < 4 years,4,none,2,real estate,30,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,60,existing credits paid back duly till now,car (new),7408,100 <= <500 DM,<1 years,4,none,2,savings agreement/life insurance,24,none,own,1,management/ highly qualified employee,1,none,yes,female,divorced/separated,0
no account,48,critical account,car (used),11590,100 <= <500 DM,1<= < 4 years,2,none,4,car or other,24,bank,rent,2,unskilled - resident,1,none,yes,female,divorced/separated,0
<0 DM,24,no credits taken,furniture/equipment,4110,<100 DM,>=7 years,3,none,4,unknown / no property,23,bank,rent,2,skilled employee / official,2,none,yes,male,divorced/separated,0
<0 DM,6,critical account,furniture/equipment,3384,<100 DM,1<= < 4 years,1,none,4,real estate,44,none,rent,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,13,existing credits paid back duly till now,radio/television,2101,<100 DM,<1 years,2,guarantor,4,savings agreement/life insurance,23,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,15,existing credits paid back duly till now,domestic appliances,1275,no savings account,1<= < 4 years,4,none,2,car or other,24,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,furniture/equipment,4169,<100 DM,1<= < 4 years,4,none,4,savings agreement/life insurance,28,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,10,existing credits paid back duly till now,furniture/equipment,1521,<100 DM,1<= < 4 years,4,none,2,car or other,31,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
0 <= <200 DM,24,critical account,education,5743,<100 DM,<1 years,2,none,4,unknown / no property,24,none,for free,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,21,existing credits paid back duly till now,furniture/equipment,3599,<100 DM,4<= <7 years,1,none,4,car or other,26,none,rent,1,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,radio/television,3213,500 <= < 1000 DM,<1 years,1,none,3,real estate,25,none,rent,1,skilled employee / official,1,none,yes,male,married/widowed,1
0 <= <200 DM,18,existing credits paid back duly till now,business,4439,<100 DM,>=7 years,1,co-applicant,1,real estate,33,bank,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
>= 200 DM ,10,existing credits paid back duly till now,car (new),3949,<100 DM,<1 years,1,guarantor,1,savings agreement/life insurance,37,none,own,1,unskilled - resident,2,none,yes,male,divorced/separated,1
no account,15,critical account,radio/television,1459,<100 DM,1<= < 4 years,4,none,2,car or other,43,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,13,critical account,radio/television,882,<100 DM,<1 years,4,guarantor,4,real estate,23,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,radio/television,3758,500 <= < 1000 DM,unemployed,1,none,4,unknown / no property,23,none,rent,1,unemployed/ unskilled  - non-resident,1,none,yes,female,divorced/separated,1
no account,6,delay in paying off,business,1743,100 <= <500 DM,1<= < 4 years,1,none,2,real estate,34,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
0 <= <200 DM,9,critical account,education,1136,>= 1000 DM,>=7 years,4,none,3,unknown / no property,32,none,for free,2,skilled employee / official,2,none,yes,male,divorced/separated,0
no account,9,existing credits paid back duly till now,domestic appliances,1236,<100 DM,<1 years,1,none,4,real estate,23,none,rent,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,9,existing credits paid back duly till now,furniture/equipment,959,<100 DM,1<= < 4 years,1,none,2,car or other,29,none,own,1,skilled employee / official,1,none,no,female,divorced/separated,0
no account,18,critical account,car (used),3229,no savings account,unemployed,2,none,4,unknown / no property,38,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,12,no credits taken,radio/television,6199,<100 DM,1<= < 4 years,4,none,2,savings agreement/life insurance,28,none,rent,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,10,existing credits paid back duly till now,education,727,500 <= < 1000 DM,>=7 years,4,none,4,unknown / no property,46,none,for free,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,car (new),1246,<100 DM,<1 years,4,none,2,real estate,23,store,own,1,unskilled - resident,1,none,yes,male,divorced/separated,0
no account,12,critical account,radio/television,2331,no savings account,>=7 years,1,co-applicant,4,real estate,49,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,36,delay in paying off,radio/television,4463,<100 DM,1<= < 4 years,4,none,2,car or other,26,none,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,12,existing credits paid back duly till now,radio/television,776,<100 DM,1<= < 4 years,4,none,2,real estate,28,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,1
<0 DM,30,existing credits paid back duly till now,furniture/equipment,2406,<100 DM,4<= <7 years,4,none,4,real estate,23,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,18,existing credits paid back duly till now,education,1239,no savings account,1<= < 4 years,4,none,4,unknown / no property,61,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,1
>= 200 DM ,12,existing credits paid back duly till now,radio/television,3399,no savings account,>=7 years,2,none,3,car or other,37,none,own,1,management/ highly qualified employee,1,none,yes,male,divorced/separated,1
>= 200 DM ,12,delay in paying off,car (new),2247,<100 DM,1<= < 4 years,2,none,2,car or other,36,store,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,6,existing credits paid back duly till now,furniture/equipment,1766,<100 DM,1<= < 4 years,1,none,2,savings agreement/life insurance,21,none,rent,1,skilled employee / official,1,none,yes,male,married/widowed,1
<0 DM,18,existing credits paid back duly till now,furniture/equipment,2473,<100 DM,unemployed,4,none,1,car or other,25,none,own,1,unemployed/ unskilled  - non-resident,1,none,yes,male,divorced/separated,0
no account,12,existing credits paid back duly till now,business,1542,<100 DM,4<= <7 years,2,none,4,car or other,36,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,18,critical account,car (used),3850,<100 DM,4<= <7 years,3,none,1,car or other,27,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,furniture/equipment,3650,<100 DM,<1 years,1,none,4,car or other,22,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,36,existing credits paid back duly till now,furniture/equipment,3446,<100 DM,>=7 years,4,none,2,car or other,42,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,0
0 <= <200 DM,18,existing credits paid back duly till now,furniture/equipment,3001,<100 DM,4<= <7 years,2,none,4,real estate,40,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,36,existing credits paid back duly till now,car (new),3079,no savings account,1<= < 4 years,4,none,4,real estate,36,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,critical account,radio/television,6070,<100 DM,>=7 years,3,none,4,car or other,33,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,10,critical account,furniture/equipment,2146,<100 DM,<1 years,1,none,3,real estate,23,none,rent,2,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,60,critical account,car (new),13756,no savings account,>=7 years,2,none,4,unknown / no property,63,bank,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,60,all credits at this bank paid back duly,others,14782,100 <= <500 DM,>=7 years,3,none,4,unknown / no property,60,bank,for free,2,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
<0 DM,48,all credits at this bank paid back duly,business,7685,<100 DM,4<= <7 years,2,guarantor,4,car or other,37,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,18,delay in paying off,radio/television,2320,<100 DM,unemployed,2,none,3,real estate,34,none,own,2,skilled employee / official,1,none,yes,male,married/widowed,1
no account,7,delay in paying off,radio/television,846,no savings account,>=7 years,3,none,4,unknown / no property,36,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,36,existing credits paid back duly till now,car (new),14318,<100 DM,>=7 years,4,none,2,unknown / no property,57,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,6,critical account,car (new),362,100 <= <500 DM,1<= < 4 years,4,none,4,car or other,52,none,own,2,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,20,existing credits paid back duly till now,furniture/equipment,2212,no savings account,4<= <7 years,4,none,4,car or other,39,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,car (used),12976,<100 DM,unemployed,3,none,4,unknown / no property,38,none,for free,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
no account,22,existing credits paid back duly till now,car (new),1283,no savings account,4<= <7 years,4,none,4,savings agreement/life insurance,25,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
>= 200 DM ,12,existing credits paid back duly till now,car (new),1330,<100 DM,<1 years,4,none,1,real estate,26,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,30,delay in paying off,business,4272,100 <= <500 DM,1<= < 4 years,2,none,2,savings agreement/life insurance,26,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,18,critical account,radio/television,2238,<100 DM,1<= < 4 years,2,none,1,car or other,25,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,18,existing credits paid back duly till now,radio/television,1126,no savings account,<1 years,4,none,2,real estate,21,none,rent,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,18,critical account,furniture/equipment,7374,<100 DM,unemployed,4,none,4,savings agreement/life insurance,40,store,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,15,critical account,business,2326,500 <= < 1000 DM,1<= < 4 years,2,none,4,car or other,27,bank,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,9,existing credits paid back duly till now,business,1449,<100 DM,4<= <7 years,3,none,2,car or other,27,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,18,existing credits paid back duly till now,car (new),1820,<100 DM,1<= < 4 years,2,none,2,savings agreement/life insurance,30,none,own,1,management/ highly qualified employee,1,yes,yes,male,married/widowed,1
0 <= <200 DM,12,existing credits paid back duly till now,furniture/equipment,983,>= 1000 DM,<1 years,1,none,4,real estate,19,none,rent,1,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,36,existing credits paid back duly till now,car (new),3249,<100 DM,4<= <7 years,2,none,4,unknown / no property,39,bank,for free,1,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
<0 DM,6,critical account,radio/television,1957,<100 DM,4<= <7 years,1,none,4,car or other,31,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,9,critical account,furniture/equipment,2406,<100 DM,unemployed,2,none,3,car or other,31,none,own,1,management/ highly qualified employee,1,none,yes,male,divorced/separated,1
0 <= <200 DM,39,delay in paying off,education,11760,100 <= <500 DM,4<= <7 years,2,none,3,unknown / no property,32,none,rent,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,furniture/equipment,2578,<100 DM,unemployed,3,none,4,unknown / no property,55,none,for free,1,management/ highly qualified employee,1,none,yes,female,divorced/separated,1
<0 DM,36,critical account,furniture/equipment,2348,<100 DM,1<= < 4 years,3,none,2,savings agreement/life insurance,46,none,own,2,skilled employee / official,1,yes,yes,male,married/widowed,1
0 <= <200 DM,12,existing credits paid back duly till now,car (new),1223,<100 DM,>=7 years,1,none,1,real estate,46,none,rent,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,24,critical account,radio/television,1516,>= 1000 DM,1<= < 4 years,4,none,1,real estate,43,none,own,2,unskilled - resident,1,none,yes,female,divorced/separated,1
no account,18,existing credits paid back duly till now,radio/television,1473,<100 DM,<1 years,3,none,4,real estate,39,none,own,1,skilled employee / official,1,yes,yes,male,married/widowed,1
0 <= <200 DM,18,critical account,business,1887,no savings account,1<= < 4 years,4,none,4,real estate,28,bank,own,2,skilled employee / official,1,none,yes,male,married/widowed,1
no account,24,delay in paying off,business,8648,<100 DM,<1 years,2,none,2,car or other,27,bank,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,14,delay in paying off,car (new),802,<100 DM,1<= < 4 years,4,none,2,car or other,27,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
0 <= <200 DM,18,delay in paying off,car (new),2899,no savings account,>=7 years,4,none,4,car or other,43,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,radio/television,2039,<100 DM,<1 years,1,none,1,savings agreement/life insurance,22,none,own,1,skilled employee / official,1,yes,yes,male,married/widowed,0
no account,24,critical account,car (used),2197,no savings account,4<= <7 years,4,none,4,car or other,43,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
<0 DM,15,existing credits paid back duly till now,radio/television,1053,<100 DM,<1 years,4,none,2,real estate,27,none,own,1,skilled employee / official,1,none,no,male,married/widowed,1
no account,24,existing credits paid back duly till now,radio/television,3235,500 <= < 1000 DM,>=7 years,3,none,2,car or other,26,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
>= 200 DM ,12,critical account,car (new),939,500 <= < 1000 DM,4<= <7 years,4,none,2,real estate,28,none,own,3,skilled employee / official,1,yes,yes,male,married/widowed,0
0 <= <200 DM,24,existing credits paid back duly till now,radio/television,1967,<100 DM,>=7 years,4,none,4,car or other,20,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,33,critical account,car (used),7253,<100 DM,4<= <7 years,3,none,2,car or other,35,none,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,12,critical account,business,2292,<100 DM,unemployed,4,none,2,car or other,42,store,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,10,existing credits paid back duly till now,car (new),1597,500 <= < 1000 DM,1<= < 4 years,3,none,2,unknown / no property,40,none,rent,1,unskilled - resident,2,none,no,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,car (new),1381,no savings account,1<= < 4 years,4,none,2,savings agreement/life insurance,35,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,36,critical account,car (used),5842,<100 DM,>=7 years,2,none,2,savings agreement/life insurance,35,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,car (new),2579,<100 DM,<1 years,4,none,1,real estate,33,none,own,1,unskilled - resident,2,none,yes,male,divorced/separated,0
<0 DM,18,delay in paying off,education,8471,no savings account,1<= < 4 years,1,none,2,car or other,23,none,rent,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,21,existing credits paid back duly till now,car (new),2782,500 <= < 1000 DM,4<= <7 years,1,none,2,car or other,31,bank,own,1,management/ highly qualified employee,1,none,yes,female,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,car (new),1042,no savings account,1<= < 4 years,4,none,2,savings agreement/life insurance,33,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,15,existing credits paid back duly till now,car (new),3186,>= 1000 DM,4<= <7 years,2,none,3,car or other,20,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,car (used),2028,no savings account,1<= < 4 years,4,none,2,car or other,30,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,critical account,car (new),958,<100 DM,4<= <7 years,2,none,3,real estate,47,none,own,2,unskilled - resident,2,none,yes,male,divorced/separated,1
no account,21,delay in paying off,furniture/equipment,1591,100 <= <500 DM,4<= <7 years,4,none,3,real estate,34,none,own,2,management/ highly qualified employee,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,furniture/equipment,2762,no savings account,>=7 years,1,none,2,savings agreement/life insurance,25,bank,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,0
0 <= <200 DM,18,existing credits paid back duly till now,car (used),2779,<100 DM,1<= < 4 years,1,none,3,car or other,21,none,rent,1,skilled employee / official,1,yes,yes,male,married/widowed,1
no account,28,critical account,radio/television,2743,<100 DM,>=7 years,4,none,2,car or other,29,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,critical account,radio/television,1149,>= 1000 DM,1<= < 4 years,4,none,3,real estate,46,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,9,existing credits paid back duly till now,furniture/equipment,1313,<100 DM,>=7 years,1,none,4,car or other,20,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,18,critical account,repairs,1190,<100 DM,unemployed,2,none,4,unknown / no property,55,none,for free,3,unemployed/ unskilled  - non-resident,2,none,yes,female,divorced/separated,0
no account,5,existing credits paid back duly till now,business,3448,<100 DM,4<= <7 years,1,none,4,real estate,74,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,others,11328,<100 DM,1<= < 4 years,2,co-applicant,3,car or other,29,bank,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
<0 DM,6,critical account,furniture/equipment,1872,<100 DM,unemployed,4,none,4,unknown / no property,36,none,for free,3,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,24,critical account,repairs,2058,<100 DM,1<= < 4 years,4,none,2,real estate,33,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,9,existing credits paid back duly till now,furniture/equipment,2136,<100 DM,1<= < 4 years,3,none,2,real estate,25,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,1484,no savings account,1<= < 4 years,2,none,1,real estate,25,none,own,1,skilled employee / official,1,yes,yes,male,married/widowed,0
no account,6,existing credits paid back duly till now,repairs,660,500 <= < 1000 DM,4<= <7 years,2,none,4,real estate,23,none,rent,1,unskilled - resident,1,none,yes,male,married/widowed,1
no account,24,critical account,car (new),1287,>= 1000 DM,>=7 years,4,none,4,real estate,37,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,42,critical account,repairs,3394,<100 DM,unemployed,4,co-applicant,4,car or other,65,none,own,2,unemployed/ unskilled  - non-resident,1,none,yes,male,divorced/separated,1
>= 200 DM ,12,all credits at this bank paid back duly,business,609,<100 DM,<1 years,4,none,1,real estate,26,none,own,1,unemployed/ unskilled  - non-resident,1,none,yes,female,divorced/separated,0
no account,12,existing credits paid back duly till now,car (new),1884,<100 DM,>=7 years,4,none,4,car or other,39,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,furniture/equipment,1620,<100 DM,1<= < 4 years,2,co-applicant,3,savings agreement/life insurance,30,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,20,delay in paying off,others,2629,<100 DM,1<= < 4 years,2,none,3,car or other,29,bank,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,education,719,<100 DM,>=7 years,4,none,4,car or other,41,bank,own,1,unskilled - resident,2,none,yes,male,divorced/separated,0
0 <= <200 DM,48,critical account,furniture/equipment,5096,<100 DM,1<= < 4 years,2,none,3,car or other,30,none,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
no account,9,critical account,education,1244,no savings account,>=7 years,4,none,4,savings agreement/life insurance,41,none,rent,2,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,36,existing credits paid back duly till now,car (new),1842,<100 DM,<1 years,4,none,4,car or other,34,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,0
0 <= <200 DM,7,existing credits paid back duly till now,radio/television,2576,<100 DM,1<= < 4 years,2,guarantor,2,real estate,35,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
>= 200 DM ,12,existing credits paid back duly till now,furniture/equipment,1424,no savings account,>=7 years,3,none,4,real estate,55,none,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,15,delay in paying off,repairs,1512,>= 1000 DM,1<= < 4 years,3,none,3,savings agreement/life insurance,61,store,own,2,skilled employee / official,1,none,yes,male,married/widowed,0
no account,36,critical account,car (used),11054,no savings account,1<= < 4 years,4,none,2,car or other,30,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,6,existing credits paid back duly till now,radio/television,518,<100 DM,1<= < 4 years,3,none,1,real estate,29,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,12,no credits taken,furniture/equipment,2759,<100 DM,>=7 years,2,none,4,savings agreement/life insurance,34,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,car (used),2670,<100 DM,>=7 years,4,none,4,car or other,35,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,car (new),4817,<100 DM,4<= <7 years,2,co-applicant,3,savings agreement/life insurance,31,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,24,existing credits paid back duly till now,car (used),2679,<100 DM,<1 years,4,none,1,unknown / no property,29,none,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
<0 DM,11,critical account,car (new),3905,<100 DM,1<= < 4 years,2,none,2,real estate,36,none,rent,2,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,car (used),3386,<100 DM,>=7 years,3,none,4,unknown / no property,35,none,for free,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
<0 DM,6,existing credits paid back duly till now,domestic appliances,343,<100 DM,<1 years,4,none,1,real estate,27,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,18,existing credits paid back duly till now,radio/television,4594,<100 DM,<1 years,3,none,2,car or other,32,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,36,existing credits paid back duly till now,furniture/equipment,3620,<100 DM,1<= < 4 years,1,guarantor,2,savings agreement/life insurance,37,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,15,existing credits paid back duly till now,car (new),1721,<100 DM,<1 years,2,none,3,real estate,36,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,furniture/equipment,3017,<100 DM,<1 years,3,none,1,real estate,34,none,rent,1,management/ highly qualified employee,1,none,yes,female,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,retraining,754,no savings account,>=7 years,4,none,4,savings agreement/life insurance,38,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,business,1950,<100 DM,4<= <7 years,4,none,1,car or other,34,store,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,car (used),2924,<100 DM,1<= < 4 years,3,guarantor,4,unknown / no property,63,bank,own,1,skilled employee / official,2,yes,yes,male,divorced/separated,1
<0 DM,24,delay in paying off,radio/television,1659,<100 DM,<1 years,4,none,2,car or other,29,none,rent,1,unskilled - resident,1,yes,yes,female,divorced/separated,0
no account,48,delay in paying off,radio/television,7238,no savings account,>=7 years,3,none,3,car or other,32,bank,own,2,skilled employee / official,2,none,yes,male,divorced/separated,1
no account,33,delay in paying off,business,2764,<100 DM,1<= < 4 years,2,none,2,car or other,26,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,24,delay in paying off,car (used),4679,<100 DM,4<= <7 years,3,none,3,car or other,35,none,own,2,unskilled - resident,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,radio/television,3092,100 <= <500 DM,<1 years,3,none,2,car or other,22,none,rent,1,skilled employee / official,1,yes,yes,male,married/widowed,0
<0 DM,6,existing credits paid back duly till now,education,448,<100 DM,<1 years,4,none,4,savings agreement/life insurance,23,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
<0 DM,9,existing credits paid back duly till now,car (new),654,<100 DM,1<= < 4 years,4,none,3,car or other,28,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,0
no account,6,existing credits paid back duly till now,retraining,1238,no savings account,unemployed,4,none,4,savings agreement/life insurance,36,none,own,1,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
0 <= <200 DM,18,critical account,radio/television,1245,<100 DM,1<= < 4 years,4,none,2,car or other,33,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,0
<0 DM,18,no credits taken,furniture/equipment,3114,<100 DM,<1 years,1,none,4,savings agreement/life insurance,26,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,39,existing credits paid back duly till now,car (used),2569,500 <= < 1000 DM,1<= < 4 years,4,none,4,car or other,24,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
>= 200 DM ,24,existing credits paid back duly till now,radio/television,5152,<100 DM,4<= <7 years,4,none,2,car or other,25,bank,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,business,1037,100 <= <500 DM,4<= <7 years,3,none,4,real estate,39,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
<0 DM,15,critical account,furniture/equipment,1478,<100 DM,>=7 years,4,none,4,car or other,44,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
0 <= <200 DM,12,critical account,radio/television,3573,<100 DM,1<= < 4 years,1,none,1,real estate,23,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,car (new),1201,<100 DM,<1 years,4,none,1,savings agreement/life insurance,26,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,30,existing credits paid back duly till now,furniture/equipment,3622,>= 1000 DM,>=7 years,4,none,4,savings agreement/life insurance,57,none,rent,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,15,delay in paying off,furniture/equipment,960,>= 1000 DM,4<= <7 years,3,none,2,savings agreement/life insurance,30,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,12,critical account,car (new),1163,500 <= < 1000 DM,1<= < 4 years,4,none,4,real estate,44,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,6,delay in paying off,car (new),1209,<100 DM,unemployed,4,none,4,savings agreement/life insurance,47,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,12,existing credits paid back duly till now,radio/television,3077,<100 DM,1<= < 4 years,2,none,4,car or other,52,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,car (new),3757,<100 DM,>=7 years,4,co-applicant,4,unknown / no property,62,none,for free,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,10,existing credits paid back duly till now,car (new),1418,100 <= <500 DM,1<= < 4 years,3,none,2,real estate,35,none,rent,1,unskilled - resident,1,none,no,male,divorced/separated,1
no account,6,existing credits paid back duly till now,car (new),3518,<100 DM,1<= < 4 years,2,guarantor,3,savings agreement/life insurance,26,none,rent,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,12,critical account,radio/television,1934,<100 DM,>=7 years,2,none,2,unknown / no property,26,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,27,no credits taken,business,8318,<100 DM,>=7 years,2,none,4,unknown / no property,42,none,for free,2,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
no account,6,critical account,radio/television,1237,100 <= <500 DM,1<= < 4 years,1,none,1,savings agreement/life insurance,27,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,6,existing credits paid back duly till now,radio/television,368,no savings account,>=7 years,4,none,4,savings agreement/life insurance,38,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,12,critical account,car (new),2122,<100 DM,1<= < 4 years,3,none,2,real estate,39,none,rent,2,unskilled - resident,2,none,no,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,furniture/equipment,2996,no savings account,1<= < 4 years,2,none,4,car or other,20,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,0
0 <= <200 DM,36,existing credits paid back duly till now,furniture/equipment,9034,100 <= <500 DM,<1 years,4,co-applicant,1,unknown / no property,29,none,rent,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,24,critical account,furniture/equipment,1585,<100 DM,4<= <7 years,4,none,3,savings agreement/life insurance,40,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,radio/television,1301,<100 DM,>=7 years,4,guarantor,2,real estate,32,none,own,1,unskilled - resident,1,none,yes,male,married/widowed,1
>= 200 DM ,6,critical account,car (new),1323,100 <= <500 DM,>=7 years,2,none,4,car or other,28,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,car (new),3123,<100 DM,<1 years,4,none,1,savings agreement/life insurance,27,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
<0 DM,36,existing credits paid back duly till now,car (used),5493,<100 DM,>=7 years,2,none,4,unknown / no property,42,none,for free,1,skilled employee / official,2,none,yes,male,divorced/separated,1
>= 200 DM ,9,existing credits paid back duly till now,radio/television,1126,100 <= <500 DM,>=7 years,2,none,4,real estate,49,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,24,critical account,radio/television,1216,100 <= <500 DM,<1 years,4,none,4,unknown / no property,38,bank,own,2,skilled employee / official,2,none,yes,male,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,car (new),1207,<100 DM,<1 years,4,none,4,savings agreement/life insurance,24,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,10,existing credits paid back duly till now,car (new),1309,no savings account,1<= < 4 years,4,guarantor,4,savings agreement/life insurance,27,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,0
>= 200 DM ,15,critical account,car (used),2360,500 <= < 1000 DM,1<= < 4 years,2,none,2,car or other,36,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,15,all credits at this bank paid back duly,car (new),6850,100 <= <500 DM,unemployed,1,none,2,savings agreement/life insurance,34,none,own,1,management/ highly qualified employee,2,yes,yes,male,divorced/separated,0
no account,24,existing credits paid back duly till now,radio/television,1413,<100 DM,1<= < 4 years,4,none,2,savings agreement/life insurance,28,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,1
no account,39,existing credits paid back duly till now,car (used),8588,100 <= <500 DM,>=7 years,4,none,2,car or other,45,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,car (new),759,<100 DM,4<= <7 years,4,none,2,real estate,26,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,36,existing credits paid back duly till now,car (used),4686,<100 DM,1<= < 4 years,2,none,2,unknown / no property,32,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
>= 200 DM ,15,existing credits paid back duly till now,business,2687,<100 DM,4<= <7 years,2,none,4,savings agreement/life insurance,26,none,rent,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,12,delay in paying off,radio/television,585,<100 DM,1<= < 4 years,4,co-applicant,4,real estate,20,none,rent,2,skilled employee / official,1,none,yes,male,married/widowed,1
no account,24,existing credits paid back duly till now,car (new),2255,no savings account,<1 years,4,none,1,savings agreement/life insurance,54,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,6,critical account,car (new),609,<100 DM,4<= <7 years,4,none,3,savings agreement/life insurance,37,none,own,2,skilled employee / official,1,none,no,female,divorced/separated,1
<0 DM,6,critical account,car (new),1361,<100 DM,<1 years,2,none,4,real estate,40,none,own,1,unskilled - resident,2,none,no,male,divorced/separated,1
no account,36,critical account,furniture/equipment,7127,<100 DM,<1 years,2,none,4,savings agreement/life insurance,23,none,rent,2,skilled employee / official,1,yes,yes,female,divorced/separated,0
<0 DM,6,existing credits paid back duly till now,car (new),1203,100 <= <500 DM,>=7 years,3,none,2,savings agreement/life insurance,43,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,6,critical account,radio/television,700,no savings account,>=7 years,4,none,4,unknown / no property,36,none,for free,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,critical account,repairs,5507,<100 DM,>=7 years,3,none,4,unknown / no property,44,none,for free,2,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,radio/television,3190,<100 DM,1<= < 4 years,2,none,2,real estate,24,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
<0 DM,48,no credits taken,furniture/equipment,7119,<100 DM,1<= < 4 years,3,none,4,unknown / no property,53,none,for free,2,skilled employee / official,2,none,yes,male,divorced/separated,0
no account,24,existing credits paid back duly till now,car (used),3488,100 <= <500 DM,4<= <7 years,3,none,4,car or other,23,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,radio/television,1113,<100 DM,1<= < 4 years,4,guarantor,4,real estate,26,none,own,1,unskilled - resident,2,none,yes,female,divorced/separated,1
0 <= <200 DM,26,existing credits paid back duly till now,car (used),7966,<100 DM,<1 years,2,none,3,car or other,30,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,15,critical account,education,1532,100 <= <500 DM,1<= < 4 years,4,none,3,car or other,31,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,4,critical account,radio/television,1503,<100 DM,4<= <7 years,2,none,1,real estate,42,none,own,2,unskilled - resident,2,none,yes,male,divorced/separated,1
<0 DM,36,existing credits paid back duly till now,radio/television,2302,<100 DM,1<= < 4 years,4,none,4,car or other,31,none,rent,1,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,6,existing credits paid back duly till now,car (new),662,<100 DM,<1 years,3,none,4,real estate,41,none,own,1,unskilled - resident,2,yes,yes,male,divorced/separated,1
0 <= <200 DM,36,existing credits paid back duly till now,education,2273,<100 DM,4<= <7 years,3,none,1,car or other,32,none,own,2,skilled employee / official,2,none,yes,male,divorced/separated,1
0 <= <200 DM,15,existing credits paid back duly till now,car (new),2631,100 <= <500 DM,1<= < 4 years,2,none,4,car or other,28,none,rent,2,skilled employee / official,1,yes,yes,female,divorced/separated,0
no account,12,delay in paying off,car (used),1503,<100 DM,1<= < 4 years,4,none,4,real estate,41,none,rent,1,skilled employee / official,1,none,yes,male,married/widowed,1
no account,24,existing credits paid back duly till now,radio/television,1311,100 <= <500 DM,4<= <7 years,4,none,3,savings agreement/life insurance,26,none,own,1,skilled employee / official,1,yes,yes,male,married/widowed,1
no account,24,existing credits paid back duly till now,radio/television,3105,no savings account,<1 years,4,none,2,car or other,25,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
>= 200 DM ,21,critical account,education,2319,<100 DM,<1 years,2,none,1,car or other,33,none,rent,1,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,6,existing credits paid back duly till now,car (new),1374,no savings account,unemployed,4,none,3,savings agreement/life insurance,75,none,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,18,critical account,furniture/equipment,3612,<100 DM,>=7 years,3,none,4,savings agreement/life insurance,37,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,48,existing credits paid back duly till now,car (new),7763,<100 DM,>=7 years,4,none,4,unknown / no property,42,bank,for free,1,management/ highly qualified employee,1,none,yes,male,divorced/separated,0
>= 200 DM ,18,existing credits paid back duly till now,furniture/equipment,3049,<100 DM,<1 years,1,none,1,savings agreement/life insurance,45,store,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,1534,<100 DM,<1 years,1,none,1,real estate,23,none,rent,1,skilled employee / official,1,none,yes,male,married/widowed,0
no account,24,delay in paying off,car (new),2032,<100 DM,>=7 years,4,none,4,unknown / no property,60,none,for free,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,30,existing credits paid back duly till now,furniture/equipment,6350,no savings account,>=7 years,4,none,4,savings agreement/life insurance,31,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
>= 200 DM ,18,existing credits paid back duly till now,furniture/equipment,2864,<100 DM,1<= < 4 years,2,none,1,real estate,34,none,own,1,unskilled - resident,2,none,yes,male,divorced/separated,0
no account,12,critical account,car (new),1255,<100 DM,>=7 years,4,none,4,real estate,61,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
<0 DM,24,delay in paying off,car (new),1333,<100 DM,unemployed,4,none,2,real estate,43,none,for free,2,skilled employee / official,2,none,yes,male,divorced/separated,0
no account,24,critical account,car (new),2022,<100 DM,1<= < 4 years,4,none,4,car or other,37,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,24,existing credits paid back duly till now,radio/television,1552,<100 DM,4<= <7 years,3,none,1,car or other,32,bank,own,1,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,12,all credits at this bank paid back duly,radio/television,626,<100 DM,1<= < 4 years,4,none,4,real estate,24,bank,own,1,unskilled - resident,1,none,yes,female,divorced/separated,0
no account,48,critical account,car (used),8858,no savings account,4<= <7 years,2,none,1,unknown / no property,35,none,for free,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,12,critical account,repairs,996,no savings account,4<= <7 years,4,none,4,real estate,23,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,6,all credits at this bank paid back duly,radio/television,1750,500 <= < 1000 DM,>=7 years,2,none,4,savings agreement/life insurance,45,bank,own,1,unskilled - resident,2,none,yes,male,divorced/separated,1
<0 DM,48,existing credits paid back duly till now,radio/television,6999,<100 DM,4<= <7 years,1,guarantor,1,real estate,34,none,own,2,skilled employee / official,1,yes,yes,male,married/widowed,0
0 <= <200 DM,12,critical account,car (new),1995,100 <= <500 DM,<1 years,4,none,1,car or other,27,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,9,existing credits paid back duly till now,education,1199,<100 DM,4<= <7 years,4,none,4,savings agreement/life insurance,67,none,own,2,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,1331,<100 DM,<1 years,2,none,1,car or other,22,store,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,18,no credits taken,car (new),2278,100 <= <500 DM,<1 years,3,none,3,car or other,28,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,21,no credits taken,car (new),5003,no savings account,1<= < 4 years,1,none,4,savings agreement/life insurance,29,bank,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,0
<0 DM,24,all credits at this bank paid back duly,furniture/equipment,3552,<100 DM,4<= <7 years,3,none,4,car or other,27,bank,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,18,critical account,furniture/equipment,1928,<100 DM,<1 years,2,none,2,real estate,31,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,car (used),2964,no savings account,>=7 years,4,none,4,unknown / no property,49,bank,for free,1,skilled employee / official,2,yes,yes,male,divorced/separated,1
<0 DM,24,all credits at this bank paid back duly,radio/television,1546,<100 DM,4<= <7 years,4,guarantor,4,car or other,24,bank,rent,1,unskilled - resident,1,none,yes,male,divorced/separated,0
>= 200 DM ,6,delay in paying off,radio/television,683,<100 DM,<1 years,2,none,1,savings agreement/life insurance,29,bank,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,36,existing credits paid back duly till now,car (new),12389,no savings account,1<= < 4 years,1,none,4,unknown / no property,37,none,for free,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,24,delay in paying off,business,4712,no savings account,1<= < 4 years,4,none,2,savings agreement/life insurance,37,bank,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,24,delay in paying off,radio/television,1553,100 <= <500 DM,4<= <7 years,3,none,2,savings agreement/life insurance,23,none,rent,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,car (new),1372,<100 DM,4<= <7 years,2,none,3,car or other,36,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,24,critical account,radio/television,2578,>= 1000 DM,>=7 years,2,none,2,car or other,34,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,48,existing credits paid back duly till now,radio/television,3979,no savings account,4<= <7 years,4,none,1,car or other,41,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
<0 DM,48,existing credits paid back duly till now,radio/television,6758,<100 DM,1<= < 4 years,3,none,2,car or other,31,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,furniture/equipment,3234,<100 DM,<1 years,4,none,4,real estate,23,none,rent,1,unskilled - resident,1,yes,yes,female,divorced/separated,0
no account,30,critical account,radio/television,5954,<100 DM,4<= <7 years,3,co-applicant,2,car or other,38,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,car (used),5433,no savings account,unemployed,2,none,4,savings agreement/life insurance,26,none,rent,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
<0 DM,15,existing credits paid back duly till now,business,806,<100 DM,1<= < 4 years,4,none,4,savings agreement/life insurance,22,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,9,existing credits paid back duly till now,radio/television,1082,<100 DM,>=7 years,4,none,4,car or other,27,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,15,critical account,furniture/equipment,2788,<100 DM,4<= <7 years,2,co-applicant,3,car or other,24,bank,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,2930,<100 DM,4<= <7 years,2,none,1,real estate,27,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,24,critical account,education,1927,no savings account,1<= < 4 years,3,none,2,car or other,33,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,36,critical account,car (new),2820,<100 DM,<1 years,4,none,4,car or other,27,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,24,existing credits paid back duly till now,retraining,937,<100 DM,<1 years,4,none,3,car or other,27,none,own,2,unskilled - resident,1,none,yes,male,married/widowed,1
0 <= <200 DM,18,critical account,car (new),1056,<100 DM,>=7 years,3,guarantor,3,real estate,30,bank,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,12,critical account,car (new),3124,<100 DM,<1 years,1,none,3,real estate,49,bank,own,2,unskilled - resident,2,none,yes,male,divorced/separated,1
no account,9,existing credits paid back duly till now,furniture/equipment,1388,<100 DM,1<= < 4 years,4,none,2,real estate,26,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,36,existing credits paid back duly till now,repairs,2384,<100 DM,<1 years,4,none,1,unknown / no property,33,none,rent,1,unskilled - resident,1,none,yes,male,divorced/separated,0
no account,12,existing credits paid back duly till now,car (new),2133,no savings account,>=7 years,4,none,4,unknown / no property,52,none,for free,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,furniture/equipment,2039,<100 DM,1<= < 4 years,1,none,4,real estate,20,bank,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
<0 DM,9,critical account,car (new),2799,<100 DM,1<= < 4 years,2,none,2,real estate,36,none,rent,2,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,furniture/equipment,1289,<100 DM,1<= < 4 years,4,guarantor,1,savings agreement/life insurance,21,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,domestic appliances,1217,<100 DM,1<= < 4 years,4,none,3,real estate,47,none,own,1,unskilled - resident,1,yes,yes,male,married/widowed,0
<0 DM,12,critical account,furniture/equipment,2246,<100 DM,>=7 years,3,none,3,savings agreement/life insurance,60,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,12,critical account,radio/television,385,<100 DM,4<= <7 years,4,none,3,real estate,58,none,own,4,unskilled - resident,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,24,delay in paying off,car (new),1965,no savings account,1<= < 4 years,4,none,4,car or other,42,none,rent,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,21,existing credits paid back duly till now,business,1572,>= 1000 DM,>=7 years,4,none,4,real estate,36,bank,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,car (new),2718,<100 DM,1<= < 4 years,3,none,4,savings agreement/life insurance,20,none,rent,1,unskilled - resident,1,yes,yes,female,divorced/separated,0
<0 DM,24,all credits at this bank paid back duly,others,1358,no savings account,>=7 years,4,none,3,car or other,40,store,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,6,all credits at this bank paid back duly,car (new),931,100 <= <500 DM,<1 years,1,none,1,savings agreement/life insurance,32,store,own,1,unskilled - resident,1,none,yes,female,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,car (new),1442,<100 DM,4<= <7 years,4,none,4,car or other,23,none,rent,2,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,24,no credits taken,business,4241,<100 DM,1<= < 4 years,1,none,4,real estate,36,none,own,3,unskilled - resident,1,yes,yes,male,divorced/separated,0
no account,18,critical account,car (new),2775,<100 DM,4<= <7 years,2,none,2,savings agreement/life insurance,31,bank,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,24,delay in paying off,business,3863,<100 DM,1<= < 4 years,1,none,2,unknown / no property,32,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,7,existing credits paid back duly till now,radio/television,2329,<100 DM,<1 years,1,guarantor,1,real estate,45,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,9,existing credits paid back duly till now,furniture/equipment,918,<100 DM,1<= < 4 years,4,none,1,savings agreement/life insurance,30,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,24,all credits at this bank paid back duly,education,1837,<100 DM,4<= <7 years,4,none,4,unknown / no property,34,bank,for free,1,unskilled - resident,1,none,yes,female,divorced/separated,0
no account,36,existing credits paid back duly till now,furniture/equipment,3349,<100 DM,1<= < 4 years,4,none,2,car or other,28,none,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
>= 200 DM ,10,existing credits paid back duly till now,furniture/equipment,1275,<100 DM,<1 years,4,none,2,savings agreement/life insurance,23,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,24,all credits at this bank paid back duly,furniture/equipment,2828,500 <= < 1000 DM,1<= < 4 years,4,none,4,real estate,22,store,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,24,critical account,business,4526,<100 DM,1<= < 4 years,3,none,2,real estate,74,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,36,existing credits paid back duly till now,radio/television,2671,100 <= <500 DM,1<= < 4 years,4,co-applicant,4,unknown / no property,50,none,for free,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,18,existing credits paid back duly till now,radio/television,2051,<100 DM,<1 years,4,none,1,real estate,33,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,15,existing credits paid back duly till now,car (used),1300,no savings account,>=7 years,4,none,4,unknown / no property,45,bank,for free,1,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,domestic appliances,741,100 <= <500 DM,unemployed,4,none,3,savings agreement/life insurance,22,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
>= 200 DM ,10,existing credits paid back duly till now,car (new),1240,100 <= <500 DM,>=7 years,1,none,4,unknown / no property,48,none,for free,1,unskilled - resident,2,none,yes,female,divorced/separated,0
<0 DM,21,existing credits paid back duly till now,radio/television,3357,>= 1000 DM,<1 years,4,none,2,car or other,29,bank,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,24,all credits at this bank paid back duly,car (used),3632,<100 DM,1<= < 4 years,1,guarantor,4,car or other,22,bank,rent,1,skilled employee / official,1,none,no,female,divorced/separated,1
no account,18,delay in paying off,furniture/equipment,1808,<100 DM,4<= <7 years,4,none,1,real estate,22,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,48,no credits taken,business,12204,no savings account,1<= < 4 years,2,none,2,car or other,48,bank,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,60,delay in paying off,radio/television,9157,no savings account,1<= < 4 years,2,none,2,unknown / no property,27,none,for free,1,management/ highly qualified employee,1,none,yes,male,divorced/separated,1
<0 DM,6,critical account,car (new),3676,<100 DM,1<= < 4 years,1,none,3,real estate,37,none,rent,3,skilled employee / official,2,none,yes,male,divorced/separated,1
0 <= <200 DM,30,existing credits paid back duly till now,furniture/equipment,3441,100 <= <500 DM,1<= < 4 years,2,co-applicant,4,car or other,21,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,12,existing credits paid back duly till now,car (new),640,<100 DM,1<= < 4 years,4,none,2,real estate,49,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
0 <= <200 DM,21,critical account,business,3652,<100 DM,4<= <7 years,2,none,3,savings agreement/life insurance,27,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,critical account,car (new),1530,<100 DM,1<= < 4 years,3,none,2,savings agreement/life insurance,32,bank,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,48,existing credits paid back duly till now,business,3914,no savings account,1<= < 4 years,4,none,2,real estate,38,bank,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,12,existing credits paid back duly till now,furniture/equipment,1858,<100 DM,<1 years,4,none,1,car or other,22,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,radio/television,2600,<100 DM,1<= < 4 years,4,none,4,unknown / no property,65,none,for free,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,15,existing credits paid back duly till now,radio/television,1979,no savings account,>=7 years,4,none,2,car or other,35,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
>= 200 DM ,6,existing credits paid back duly till now,furniture/equipment,2116,<100 DM,1<= < 4 years,2,none,2,real estate,41,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,9,all credits at this bank paid back duly,car (new),1437,100 <= <500 DM,4<= <7 years,2,none,3,unknown / no property,29,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,42,critical account,furniture/equipment,4042,500 <= < 1000 DM,1<= < 4 years,4,none,4,real estate,36,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,9,existing credits paid back duly till now,education,3832,no savings account,>=7 years,1,none,4,real estate,64,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,radio/television,3660,<100 DM,1<= < 4 years,2,none,4,car or other,28,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,18,all credits at this bank paid back duly,furniture/equipment,1553,<100 DM,1<= < 4 years,4,none,3,car or other,44,bank,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,15,existing credits paid back duly till now,radio/television,1444,no savings account,<1 years,4,none,1,savings agreement/life insurance,23,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,9,existing credits paid back duly till now,furniture/equipment,1980,<100 DM,<1 years,2,co-applicant,2,car or other,19,none,rent,2,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,24,existing credits paid back duly till now,car (new),1355,<100 DM,<1 years,3,none,4,car or other,25,none,own,1,unskilled - resident,1,yes,yes,female,divorced/separated,0
no account,12,existing credits paid back duly till now,education,1393,<100 DM,>=7 years,4,none,4,savings agreement/life insurance,47,bank,own,3,skilled employee / official,2,yes,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,radio/television,1376,500 <= < 1000 DM,4<= <7 years,4,none,1,car or other,28,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,60,delay in paying off,radio/television,15653,<100 DM,4<= <7 years,2,none,4,car or other,21,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,radio/television,1493,<100 DM,<1 years,4,none,3,car or other,34,none,own,1,skilled employee / official,2,none,yes,female,divorced/separated,1
<0 DM,42,delay in paying off,radio/television,4370,<100 DM,4<= <7 years,3,none,2,savings agreement/life insurance,26,bank,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,0
<0 DM,18,existing credits paid back duly till now,education,750,<100 DM,unemployed,4,none,1,real estate,27,none,own,1,unemployed/ unskilled  - non-resident,1,none,yes,female,divorced/separated,0
0 <= <200 DM,15,existing credits paid back duly till now,repairs,1308,<100 DM,>=7 years,4,none,4,car or other,38,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,15,existing credits paid back duly till now,education,4623,100 <= <500 DM,1<= < 4 years,3,none,2,savings agreement/life insurance,40,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,24,critical account,radio/television,1851,<100 DM,4<= <7 years,4,guarantor,2,car or other,33,none,own,2,skilled employee / official,1,yes,yes,male,married/widowed,1
<0 DM,18,critical account,radio/television,1880,<100 DM,4<= <7 years,4,none,1,savings agreement/life insurance,32,none,own,2,management/ highly qualified employee,1,yes,yes,male,married/widowed,1
no account,36,delay in paying off,business,7980,no savings account,<1 years,4,none,4,car or other,27,none,rent,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
<0 DM,30,no credits taken,furniture/equipment,4583,<100 DM,1<= < 4 years,2,guarantor,2,real estate,32,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,car (new),1386,500 <= < 1000 DM,1<= < 4 years,2,none,2,savings agreement/life insurance,26,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
>= 200 DM ,24,existing credits paid back duly till now,car (new),947,<100 DM,4<= <7 years,4,none,3,unknown / no property,38,bank,for free,1,skilled employee / official,2,none,yes,male,divorced/separated,0
<0 DM,12,existing credits paid back duly till now,education,684,<100 DM,1<= < 4 years,4,none,4,car or other,40,none,rent,1,unskilled - resident,2,none,yes,male,divorced/separated,0
<0 DM,48,existing credits paid back duly till now,education,7476,<100 DM,4<= <7 years,4,none,1,unknown / no property,50,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,furniture/equipment,1922,<100 DM,1<= < 4 years,4,none,2,savings agreement/life insurance,37,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,car (new),2303,<100 DM,>=7 years,4,co-applicant,1,real estate,45,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,36,delay in paying off,car (new),8086,100 <= <500 DM,>=7 years,2,none,4,car or other,42,none,own,4,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,24,critical account,car (used),2346,<100 DM,4<= <7 years,4,none,3,car or other,35,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,14,existing credits paid back duly till now,car (new),3973,<100 DM,unemployed,1,none,4,unknown / no property,22,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,car (new),888,<100 DM,>=7 years,4,none,4,car or other,41,bank,own,1,unskilled - resident,2,none,yes,male,divorced/separated,0
no account,48,existing credits paid back duly till now,radio/television,10222,no savings account,4<= <7 years,4,none,3,car or other,37,store,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,30,no credits taken,business,4221,<100 DM,1<= < 4 years,2,none,1,car or other,28,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,18,critical account,furniture/equipment,6361,<100 DM,>=7 years,2,none,1,unknown / no property,41,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
>= 200 DM ,12,existing credits paid back duly till now,radio/television,1297,<100 DM,1<= < 4 years,3,none,4,real estate,23,none,rent,1,skilled employee / official,1,none,yes,male,married/widowed,1
<0 DM,12,existing credits paid back duly till now,car (new),900,no savings account,1<= < 4 years,4,none,2,car or other,23,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,0
no account,21,existing credits paid back duly till now,furniture/equipment,2241,<100 DM,>=7 years,4,none,2,real estate,50,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,6,delay in paying off,furniture/equipment,1050,<100 DM,unemployed,4,none,1,savings agreement/life insurance,35,store,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
>= 200 DM ,6,critical account,education,1047,<100 DM,1<= < 4 years,2,none,4,savings agreement/life insurance,50,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
no account,24,critical account,others,6314,<100 DM,unemployed,4,co-applicant,2,unknown / no property,27,bank,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,30,all credits at this bank paid back duly,furniture/equipment,3496,>= 1000 DM,1<= < 4 years,4,none,2,car or other,34,store,own,1,skilled employee / official,2,yes,yes,male,divorced/separated,1
no account,48,all credits at this bank paid back duly,business,3609,<100 DM,1<= < 4 years,1,none,1,real estate,27,store,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,12,critical account,car (new),4843,<100 DM,>=7 years,3,co-applicant,4,savings agreement/life insurance,43,none,rent,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
>= 200 DM ,30,critical account,radio/television,3017,<100 DM,>=7 years,4,none,4,savings agreement/life insurance,47,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,critical account,business,4139,100 <= <500 DM,1<= < 4 years,3,none,3,savings agreement/life insurance,27,none,own,2,unskilled - resident,1,yes,yes,male,divorced/separated,1
no account,36,existing credits paid back duly till now,business,5742,100 <= <500 DM,4<= <7 years,2,none,2,car or other,31,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,60,existing credits paid back duly till now,car (new),10366,<100 DM,>=7 years,2,none,4,savings agreement/life insurance,42,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,6,critical account,car (new),2080,500 <= < 1000 DM,1<= < 4 years,1,none,2,car or other,24,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,1
no account,21,delay in paying off,business,2580,500 <= < 1000 DM,<1 years,4,none,2,real estate,41,bank,own,1,unskilled - resident,2,none,yes,male,divorced/separated,0
no account,30,critical account,radio/television,4530,<100 DM,4<= <7 years,4,none,4,car or other,26,none,rent,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
no account,24,critical account,furniture/equipment,5150,<100 DM,>=7 years,4,none,4,car or other,33,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,72,existing credits paid back duly till now,radio/television,5595,100 <= <500 DM,1<= < 4 years,2,none,2,car or other,24,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,0
<0 DM,24,existing credits paid back duly till now,radio/television,2384,<100 DM,>=7 years,4,none,4,real estate,64,bank,rent,1,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,radio/television,1453,<100 DM,<1 years,3,none,1,real estate,26,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,6,existing credits paid back duly till now,education,1538,<100 DM,<1 years,1,none,2,unknown / no property,56,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,12,existing credits paid back duly till now,radio/television,2279,no savings account,1<= < 4 years,4,none,4,unknown / no property,37,none,for free,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,15,delay in paying off,radio/television,1478,<100 DM,1<= < 4 years,4,none,3,real estate,33,bank,own,2,skilled employee / official,1,none,yes,male,married/widowed,1
no account,24,critical account,radio/television,5103,<100 DM,<1 years,3,none,3,unknown / no property,47,none,for free,3,skilled employee / official,1,yes,yes,male,married/widowed,1
0 <= <200 DM,36,delay in paying off,business,9857,100 <= <500 DM,4<= <7 years,1,none,3,savings agreement/life insurance,31,none,own,2,unskilled - resident,2,yes,yes,male,divorced/separated,1
no account,60,existing credits paid back duly till now,car (new),6527,no savings account,1<= < 4 years,4,none,4,unknown / no property,34,none,for free,1,skilled employee / official,2,yes,yes,male,divorced/separated,1
>= 200 DM ,10,critical account,radio/television,1347,no savings account,4<= <7 years,4,none,2,savings agreement/life insurance,27,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,36,delay in paying off,car (new),2862,100 <= <500 DM,>=7 years,4,none,3,unknown / no property,30,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,9,existing credits paid back duly till now,radio/television,2753,100 <= <500 DM,>=7 years,3,co-applicant,4,car or other,35,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,car (new),3651,>= 1000 DM,1<= < 4 years,1,none,3,savings agreement/life insurance,31,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,15,critical account,furniture/equipment,975,<100 DM,1<= < 4 years,2,none,3,savings agreement/life insurance,25,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,15,existing credits paid back duly till now,repairs,2631,100 <= <500 DM,1<= < 4 years,3,none,2,real estate,25,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,radio/television,2896,100 <= <500 DM,<1 years,2,none,1,car or other,29,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,6,critical account,car (new),4716,no savings account,<1 years,1,none,3,real estate,44,none,own,2,unskilled - resident,2,none,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,radio/television,2284,<100 DM,4<= <7 years,4,none,2,car or other,28,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,6,existing credits paid back duly till now,car (used),1236,500 <= < 1000 DM,1<= < 4 years,2,none,4,savings agreement/life insurance,50,none,rent,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,1103,<100 DM,4<= <7 years,4,guarantor,3,real estate,29,none,own,2,skilled employee / official,1,none,no,male,divorced/separated,1
no account,12,critical account,car (new),926,<100 DM,unemployed,1,none,2,savings agreement/life insurance,38,none,own,1,unemployed/ unskilled  - non-resident,1,none,yes,female,divorced/separated,1
no account,18,critical account,radio/television,1800,<100 DM,1<= < 4 years,4,none,2,car or other,24,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
>= 200 DM ,15,existing credits paid back duly till now,education,1905,<100 DM,>=7 years,4,none,4,car or other,40,none,rent,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,furniture/equipment,1123,500 <= < 1000 DM,1<= < 4 years,4,none,4,car or other,29,none,rent,1,unskilled - resident,1,none,yes,female,divorced/separated,0
<0 DM,48,critical account,car (used),6331,<100 DM,>=7 years,4,none,4,unknown / no property,46,none,for free,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
>= 200 DM ,24,existing credits paid back duly till now,radio/television,1377,100 <= <500 DM,>=7 years,4,none,2,unknown / no property,47,none,for free,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,30,delay in paying off,business,2503,100 <= <500 DM,>=7 years,4,none,2,savings agreement/life insurance,41,store,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,27,existing credits paid back duly till now,business,2528,<100 DM,<1 years,4,none,1,savings agreement/life insurance,32,none,own,1,skilled employee / official,2,yes,yes,female,divorced/separated,1
no account,15,existing credits paid back duly till now,car (new),5324,500 <= < 1000 DM,>=7 years,1,none,4,unknown / no property,35,none,for free,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,48,existing credits paid back duly till now,car (new),6560,100 <= <500 DM,4<= <7 years,3,none,2,savings agreement/life insurance,24,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,12,no credits taken,furniture/equipment,2969,<100 DM,<1 years,4,none,3,savings agreement/life insurance,25,none,rent,2,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,9,existing credits paid back duly till now,radio/television,1206,<100 DM,>=7 years,4,none,4,real estate,25,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,9,existing credits paid back duly till now,radio/television,2118,<100 DM,1<= < 4 years,2,none,2,real estate,37,none,own,1,unskilled - resident,2,none,yes,male,divorced/separated,1
no account,18,critical account,radio/television,629,500 <= < 1000 DM,>=7 years,4,none,3,savings agreement/life insurance,32,bank,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,6,all credits at this bank paid back duly,education,1198,<100 DM,>=7 years,4,none,4,unknown / no property,35,none,for free,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,21,existing credits paid back duly till now,car (used),2476,no savings account,>=7 years,4,none,4,real estate,46,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,9,critical account,radio/television,1138,<100 DM,1<= < 4 years,4,none,4,real estate,25,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
0 <= <200 DM,60,existing credits paid back duly till now,car (new),14027,<100 DM,4<= <7 years,4,none,2,unknown / no property,27,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,30,critical account,car (used),7596,no savings account,>=7 years,1,none,4,car or other,63,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,30,critical account,radio/television,3077,no savings account,>=7 years,3,none,2,car or other,40,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,radio/television,1505,<100 DM,1<= < 4 years,4,none,2,unknown / no property,32,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
>= 200 DM ,24,critical account,radio/television,3148,no savings account,1<= < 4 years,3,none,2,car or other,31,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,20,no credits taken,car (used),6148,100 <= <500 DM,>=7 years,3,none,4,car or other,31,bank,own,2,skilled employee / official,1,yes,yes,male,married/widowed,1
>= 200 DM ,9,no credits taken,radio/television,1337,<100 DM,<1 years,4,none,2,car or other,34,none,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,6,all credits at this bank paid back duly,education,433,>= 1000 DM,<1 years,4,none,2,savings agreement/life insurance,24,bank,rent,1,skilled employee / official,2,none,yes,female,divorced/separated,0
<0 DM,12,existing credits paid back duly till now,car (new),1228,<100 DM,1<= < 4 years,4,none,2,real estate,24,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,0
0 <= <200 DM,9,existing credits paid back duly till now,radio/television,790,500 <= < 1000 DM,1<= < 4 years,4,none,3,real estate,66,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
no account,27,existing credits paid back duly till now,car (new),2570,<100 DM,1<= < 4 years,3,none,3,real estate,21,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,6,critical account,car (new),250,>= 1000 DM,1<= < 4 years,2,none,2,real estate,41,bank,own,2,unskilled - resident,1,none,yes,female,divorced/separated,1
no account,15,critical account,radio/television,1316,500 <= < 1000 DM,1<= < 4 years,2,none,2,savings agreement/life insurance,47,none,own,2,unskilled - resident,1,none,yes,male,married/widowed,1
<0 DM,18,existing credits paid back duly till now,radio/television,1882,<100 DM,1<= < 4 years,4,none,4,car or other,25,bank,rent,2,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,48,all credits at this bank paid back duly,business,6416,<100 DM,>=7 years,4,none,3,unknown / no property,59,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
>= 200 DM ,24,critical account,business,1275,>= 1000 DM,1<= < 4 years,2,none,4,real estate,36,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,24,delay in paying off,radio/television,6403,<100 DM,<1 years,1,none,2,car or other,33,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,radio/television,1987,<100 DM,1<= < 4 years,2,none,4,real estate,21,none,rent,1,unskilled - resident,2,none,yes,male,divorced/separated,0
0 <= <200 DM,8,existing credits paid back duly till now,radio/television,760,<100 DM,4<= <7 years,4,guarantor,2,real estate,44,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
no account,24,existing credits paid back duly till now,car (used),2603,>= 1000 DM,1<= < 4 years,2,none,4,car or other,28,none,rent,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,4,critical account,car (new),3380,<100 DM,4<= <7 years,1,none,1,real estate,37,none,own,1,skilled employee / official,2,none,yes,female,divorced/separated,1
0 <= <200 DM,36,all credits at this bank paid back duly,domestic appliances,3990,no savings account,<1 years,3,none,2,unknown / no property,29,bank,own,1,unemployed/ unskilled  - non-resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,car (used),11560,<100 DM,1<= < 4 years,1,none,4,car or other,23,none,rent,2,management/ highly qualified employee,1,none,yes,female,divorced/separated,0
<0 DM,18,existing credits paid back duly till now,car (new),4380,100 <= <500 DM,1<= < 4 years,3,none,4,car or other,35,none,own,1,unskilled - resident,2,yes,yes,male,divorced/separated,1
no account,6,critical account,car (new),6761,<100 DM,4<= <7 years,1,none,3,unknown / no property,45,none,own,2,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
0 <= <200 DM,30,no credits taken,business,4280,100 <= <500 DM,1<= < 4 years,4,none,4,car or other,26,none,rent,2,unskilled - resident,1,none,yes,female,divorced/separated,0
<0 DM,24,all credits at this bank paid back duly,car (new),2325,100 <= <500 DM,4<= <7 years,2,none,3,car or other,32,bank,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,10,all credits at this bank paid back duly,radio/television,1048,<100 DM,1<= < 4 years,4,none,4,real estate,23,store,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,21,existing credits paid back duly till now,radio/television,3160,no savings account,>=7 years,4,none,3,savings agreement/life insurance,41,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,24,all credits at this bank paid back duly,furniture/equipment,2483,500 <= < 1000 DM,1<= < 4 years,4,none,4,real estate,22,store,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,39,critical account,furniture/equipment,14179,no savings account,4<= <7 years,4,none,4,savings agreement/life insurance,30,none,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,13,critical account,business,1797,<100 DM,<1 years,3,none,1,savings agreement/life insurance,28,bank,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
<0 DM,15,existing credits paid back duly till now,car (new),2511,<100 DM,unemployed,1,none,4,car or other,23,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,car (new),1274,<100 DM,<1 years,3,none,1,real estate,37,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,0
no account,21,existing credits paid back duly till now,car (used),5248,no savings account,1<= < 4 years,1,none,3,car or other,26,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,15,existing credits paid back duly till now,car (used),3029,<100 DM,4<= <7 years,2,none,2,car or other,33,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,6,existing credits paid back duly till now,furniture/equipment,428,<100 DM,>=7 years,2,none,1,savings agreement/life insurance,49,bank,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,car (new),976,<100 DM,<1 years,1,none,2,car or other,23,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,0
0 <= <200 DM,12,existing credits paid back duly till now,business,841,100 <= <500 DM,4<= <7 years,2,none,4,real estate,23,none,rent,1,unskilled - resident,1,none,yes,female,divorced/separated,1
no account,30,critical account,radio/television,5771,<100 DM,4<= <7 years,4,none,2,car or other,25,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,12,delay in paying off,repairs,1555,>= 1000 DM,>=7 years,4,none,4,unknown / no property,55,none,for free,2,skilled employee / official,2,none,yes,male,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,car (new),1285,no savings account,4<= <7 years,4,none,4,unknown / no property,32,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
>= 200 DM ,6,critical account,car (new),1299,<100 DM,1<= < 4 years,1,none,1,real estate,74,none,own,3,unemployed/ unskilled  - non-resident,2,none,no,male,divorced/separated,1
>= 200 DM ,15,critical account,radio/television,1271,no savings account,1<= < 4 years,3,none,4,unknown / no property,39,none,for free,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,24,existing credits paid back duly till now,car (new),1393,<100 DM,1<= < 4 years,2,guarantor,2,real estate,31,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,12,critical account,car (new),691,<100 DM,>=7 years,4,none,3,savings agreement/life insurance,35,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,15,critical account,car (new),5045,no savings account,>=7 years,1,none,4,car or other,59,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,18,critical account,furniture/equipment,2124,<100 DM,1<= < 4 years,4,none,4,real estate,24,none,rent,2,skilled employee / official,1,none,yes,female,divorced/separated,0
<0 DM,12,existing credits paid back duly till now,radio/television,2214,<100 DM,1<= < 4 years,4,none,3,savings agreement/life insurance,24,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,21,critical account,car (new),12680,no savings account,>=7 years,4,none,4,unknown / no property,30,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,24,critical account,car (new),2463,100 <= <500 DM,4<= <7 years,4,none,3,savings agreement/life insurance,27,none,own,2,skilled employee / official,1,yes,yes,male,married/widowed,1
0 <= <200 DM,12,existing credits paid back duly till now,radio/television,1155,<100 DM,>=7 years,3,guarantor,3,real estate,40,bank,own,2,unskilled - resident,1,none,yes,male,married/widowed,1
<0 DM,30,existing credits paid back duly till now,furniture/equipment,3108,<100 DM,<1 years,2,none,4,savings agreement/life insurance,31,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,0
no account,10,existing credits paid back duly till now,car (used),2901,no savings account,<1 years,1,none,4,real estate,31,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,12,critical account,furniture/equipment,3617,<100 DM,>=7 years,1,none,4,car or other,28,none,rent,3,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,12,critical account,radio/television,1655,<100 DM,>=7 years,2,none,4,real estate,63,none,own,2,unskilled - resident,1,yes,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,car (used),2812,no savings account,>=7 years,2,none,4,real estate,26,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,36,critical account,education,8065,<100 DM,1<= < 4 years,3,none,2,unknown / no property,25,none,own,2,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
no account,21,critical account,car (used),3275,<100 DM,>=7 years,1,none,4,car or other,36,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,24,critical account,radio/television,2223,100 <= <500 DM,>=7 years,4,none,4,savings agreement/life insurance,52,bank,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
>= 200 DM ,12,critical account,car (new),1480,500 <= < 1000 DM,unemployed,2,none,4,unknown / no property,66,bank,for free,3,unemployed/ unskilled  - non-resident,1,none,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,car (new),1371,no savings account,1<= < 4 years,4,none,4,real estate,25,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,36,critical account,car (new),3535,<100 DM,4<= <7 years,4,none,4,car or other,37,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,radio/television,3509,<100 DM,4<= <7 years,4,guarantor,1,real estate,25,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,36,critical account,car (used),5711,>= 1000 DM,>=7 years,4,none,2,car or other,38,none,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,repairs,3872,<100 DM,unemployed,2,none,4,car or other,67,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
0 <= <200 DM,39,critical account,radio/television,4933,<100 DM,4<= <7 years,2,guarantor,2,real estate,25,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,24,critical account,car (new),1940,>= 1000 DM,>=7 years,4,none,4,real estate,60,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,12,no credits taken,retraining,1410,<100 DM,1<= < 4 years,2,none,2,real estate,31,none,own,1,unskilled - resident,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,car (new),836,100 <= <500 DM,<1 years,4,none,2,savings agreement/life insurance,23,bank,own,1,unskilled - resident,1,none,yes,female,divorced/separated,0
0 <= <200 DM,20,existing credits paid back duly till now,car (used),6468,no savings account,unemployed,1,none,4,real estate,60,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,18,existing credits paid back duly till now,business,1941,>= 1000 DM,1<= < 4 years,4,none,2,savings agreement/life insurance,35,none,own,1,unskilled - resident,1,yes,yes,male,divorced/separated,1
no account,22,existing credits paid back duly till now,radio/television,2675,500 <= < 1000 DM,>=7 years,3,none,4,car or other,40,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,48,critical account,car (used),2751,no savings account,>=7 years,4,none,3,car or other,38,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
0 <= <200 DM,48,delay in paying off,education,6224,<100 DM,>=7 years,4,none,4,unknown / no property,50,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,40,critical account,education,5998,<100 DM,1<= < 4 years,4,none,3,unknown / no property,27,bank,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,21,existing credits paid back duly till now,business,1188,<100 DM,>=7 years,2,none,4,savings agreement/life insurance,39,none,own,1,skilled employee / official,2,none,yes,female,divorced/separated,0
no account,24,existing credits paid back duly till now,car (used),6313,no savings account,>=7 years,3,none,4,car or other,41,none,own,1,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
no account,6,critical account,furniture/equipment,1221,no savings account,1<= < 4 years,1,none,2,savings agreement/life insurance,27,none,own,2,skilled employee / official,1,none,yes,male,married/widowed,1
>= 200 DM ,24,existing credits paid back duly till now,furniture/equipment,2892,<100 DM,>=7 years,3,none,4,unknown / no property,51,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,furniture/equipment,3062,500 <= < 1000 DM,>=7 years,4,none,3,unknown / no property,32,none,rent,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,9,existing credits paid back duly till now,furniture/equipment,2301,100 <= <500 DM,<1 years,2,none,4,savings agreement/life insurance,22,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,car (used),7511,no savings account,>=7 years,1,none,4,savings agreement/life insurance,51,none,for free,1,skilled employee / official,2,yes,yes,male,divorced/separated,0
no account,12,critical account,furniture/equipment,1258,<100 DM,<1 years,2,none,4,savings agreement/life insurance,22,none,rent,2,unskilled - resident,1,none,yes,female,divorced/separated,1
no account,24,delay in paying off,car (new),717,no savings account,>=7 years,4,none,4,car or other,54,none,own,2,skilled employee / official,1,yes,yes,male,married/widowed,1
0 <= <200 DM,9,existing credits paid back duly till now,car (new),1549,no savings account,<1 years,4,none,2,real estate,35,none,own,1,unemployed/ unskilled  - non-resident,1,none,yes,male,divorced/separated,1
no account,24,critical account,education,1597,<100 DM,>=7 years,4,none,4,unknown / no property,54,none,for free,2,skilled employee / official,2,none,yes,male,divorced/separated,1
0 <= <200 DM,18,critical account,radio/television,1795,<100 DM,>=7 years,3,guarantor,4,real estate,48,bank,rent,2,unskilled - resident,1,yes,yes,female,divorced/separated,1
<0 DM,20,critical account,furniture/equipment,4272,<100 DM,>=7 years,1,none,4,savings agreement/life insurance,24,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,12,critical account,radio/television,976,no savings account,>=7 years,4,none,4,car or other,35,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,12,existing credits paid back duly till now,car (new),7472,no savings account,unemployed,1,none,2,real estate,24,none,rent,1,unemployed/ unskilled  - non-resident,1,none,yes,female,divorced/separated,1
<0 DM,36,existing credits paid back duly till now,car (new),9271,<100 DM,4<= <7 years,2,none,1,car or other,24,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,6,existing credits paid back duly till now,radio/television,590,<100 DM,<1 years,3,none,3,real estate,26,none,own,1,unskilled - resident,1,none,no,male,married/widowed,1
no account,12,critical account,radio/television,930,no savings account,>=7 years,4,none,4,real estate,65,none,own,4,skilled employee / official,1,none,yes,male,divorced/separated,1
0 <= <200 DM,42,all credits at this bank paid back duly,car (used),9283,<100 DM,unemployed,1,none,2,unknown / no property,55,bank,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,15,no credits taken,car (new),1778,<100 DM,<1 years,2,none,1,real estate,26,none,rent,2,unemployed/ unskilled  - non-resident,1,none,yes,female,divorced/separated,0
0 <= <200 DM,8,existing credits paid back duly till now,business,907,<100 DM,<1 years,3,none,2,real estate,26,none,own,1,skilled employee / official,1,yes,yes,male,married/widowed,1
0 <= <200 DM,6,existing credits paid back duly till now,radio/television,484,<100 DM,4<= <7 years,3,guarantor,3,real estate,28,bank,own,1,unskilled - resident,1,none,yes,male,married/widowed,1
<0 DM,36,critical account,car (used),9629,<100 DM,4<= <7 years,4,none,4,car or other,24,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
<0 DM,48,existing credits paid back duly till now,domestic appliances,3051,<100 DM,1<= < 4 years,3,none,4,car or other,54,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,48,existing credits paid back duly till now,car (new),3931,<100 DM,4<= <7 years,4,none,4,unknown / no property,46,none,for free,1,skilled employee / official,2,none,yes,male,divorced/separated,0
0 <= <200 DM,36,delay in paying off,car (new),7432,<100 DM,1<= < 4 years,2,none,2,savings agreement/life insurance,54,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,6,existing credits paid back duly till now,domestic appliances,1338,500 <= < 1000 DM,1<= < 4 years,1,none,4,real estate,62,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,6,critical account,radio/television,1554,<100 DM,4<= <7 years,1,none,2,car or other,24,none,rent,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,36,existing credits paid back duly till now,others,15857,<100 DM,unemployed,2,co-applicant,3,car or other,43,none,own,1,management/ highly qualified employee,1,none,yes,male,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,radio/television,1345,<100 DM,1<= < 4 years,4,none,3,real estate,26,bank,own,1,skilled employee / official,1,none,yes,male,married/widowed,0
no account,12,existing credits paid back duly till now,car (new),1101,<100 DM,1<= < 4 years,3,none,2,real estate,27,none,own,2,skilled employee / official,1,yes,yes,male,married/widowed,1
>= 200 DM ,12,existing credits paid back duly till now,radio/television,3016,<100 DM,1<= < 4 years,3,none,1,car or other,24,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,1
<0 DM,36,existing credits paid back duly till now,furniture/equipment,2712,<100 DM,>=7 years,2,none,2,savings agreement/life insurance,41,bank,own,1,skilled employee / official,2,none,yes,male,divorced/separated,0
<0 DM,8,critical account,car (new),731,<100 DM,>=7 years,4,none,4,real estate,47,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,18,critical account,furniture/equipment,3780,<100 DM,<1 years,3,none,2,car or other,35,none,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,21,critical account,car (new),1602,<100 DM,>=7 years,4,none,3,car or other,30,none,own,2,skilled employee / official,1,yes,yes,male,married/widowed,1
<0 DM,18,critical account,car (new),3966,<100 DM,>=7 years,1,none,4,real estate,33,bank,rent,3,skilled employee / official,1,yes,yes,female,divorced/separated,0
no account,18,no credits taken,business,4165,<100 DM,1<= < 4 years,2,none,2,car or other,36,store,own,2,skilled employee / official,2,none,yes,male,divorced/separated,0
<0 DM,36,existing credits paid back duly till now,car (used),8335,no savings account,>=7 years,3,none,4,unknown / no property,47,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,48,delay in paying off,business,6681,no savings account,1<= < 4 years,4,none,4,unknown / no property,38,none,for free,1,skilled employee / official,2,yes,yes,male,divorced/separated,1
no account,24,delay in paying off,business,2375,500 <= < 1000 DM,1<= < 4 years,4,none,2,car or other,44,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,car (new),1216,<100 DM,<1 years,4,none,3,car or other,23,none,rent,1,skilled employee / official,1,yes,yes,female,divorced/separated,0
<0 DM,45,no credits taken,business,11816,<100 DM,>=7 years,2,none,4,car or other,29,none,rent,2,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,24,existing credits paid back duly till now,radio/television,5084,no savings account,>=7 years,2,none,4,car or other,42,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
>= 200 DM ,15,existing credits paid back duly till now,radio/television,2327,<100 DM,<1 years,2,none,3,real estate,25,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,0
<0 DM,12,no credits taken,car (new),1082,<100 DM,1<= < 4 years,4,none,4,car or other,48,bank,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,12,existing credits paid back duly till now,radio/television,886,no savings account,1<= < 4 years,4,none,2,car or other,21,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,4,existing credits paid back duly till now,furniture/equipment,601,<100 DM,<1 years,1,none,3,real estate,23,none,rent,1,unskilled - resident,2,none,yes,female,divorced/separated,1
<0 DM,24,critical account,car (used),2957,<100 DM,>=7 years,4,none,4,savings agreement/life insurance,63,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,24,critical account,radio/television,2611,<100 DM,>=7 years,4,co-applicant,3,real estate,46,none,own,2,skilled employee / official,1,none,yes,male,married/widowed,1
<0 DM,36,existing credits paid back duly till now,furniture/equipment,5179,<100 DM,4<= <7 years,4,none,2,savings agreement/life insurance,29,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,21,delay in paying off,car (used),2993,<100 DM,1<= < 4 years,3,none,2,real estate,28,store,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,repairs,1943,<100 DM,<1 years,4,none,4,real estate,23,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,24,all credits at this bank paid back duly,business,1559,<100 DM,4<= <7 years,4,none,4,car or other,50,bank,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,furniture/equipment,3422,<100 DM,>=7 years,4,none,4,savings agreement/life insurance,47,bank,own,3,skilled employee / official,2,yes,yes,male,divorced/separated,1
0 <= <200 DM,21,existing credits paid back duly till now,furniture/equipment,3976,no savings account,4<= <7 years,2,none,3,car or other,35,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,car (new),6761,no savings account,1<= < 4 years,2,none,4,car or other,68,none,rent,2,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,24,existing credits paid back duly till now,car (new),1249,<100 DM,<1 years,4,none,2,real estate,28,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,1
<0 DM,9,existing credits paid back duly till now,radio/television,1364,<100 DM,4<= <7 years,3,none,4,real estate,59,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,radio/television,709,<100 DM,>=7 years,4,none,4,real estate,57,store,own,1,unskilled - resident,1,none,yes,male,divorced/separated,0
<0 DM,20,critical account,car (new),2235,<100 DM,1<= < 4 years,4,guarantor,2,savings agreement/life insurance,33,bank,rent,2,skilled employee / official,1,none,no,male,married/widowed,0
no account,24,critical account,car (used),4042,no savings account,4<= <7 years,3,none,4,savings agreement/life insurance,43,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,15,critical account,radio/television,1471,<100 DM,1<= < 4 years,4,none,4,unknown / no property,35,none,for free,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,18,all credits at this bank paid back duly,car (new),1442,<100 DM,4<= <7 years,4,none,4,unknown / no property,32,none,for free,2,unskilled - resident,2,none,yes,male,divorced/separated,0
no account,36,delay in paying off,car (new),10875,<100 DM,>=7 years,2,none,2,car or other,45,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,car (new),1474,100 <= <500 DM,<1 years,4,none,3,real estate,33,none,own,1,skilled employee / official,1,yes,yes,male,married/widowed,1
no account,10,existing credits paid back duly till now,retraining,894,no savings account,4<= <7 years,4,none,3,savings agreement/life insurance,40,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
no account,15,critical account,furniture/equipment,3343,<100 DM,1<= < 4 years,4,none,2,unknown / no property,28,none,for free,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,15,existing credits paid back duly till now,car (new),3959,<100 DM,1<= < 4 years,3,none,2,savings agreement/life insurance,29,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,0
no account,9,existing credits paid back duly till now,car (new),3577,100 <= <500 DM,1<= < 4 years,1,guarantor,2,real estate,26,none,rent,1,skilled employee / official,2,none,no,male,divorced/separated,1
no account,24,critical account,car (used),5804,>= 1000 DM,1<= < 4 years,4,none,2,real estate,27,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,delay in paying off,business,2169,<100 DM,1<= < 4 years,4,none,2,car or other,28,none,own,1,skilled employee / official,1,yes,yes,male,married/widowed,0
<0 DM,24,existing credits paid back duly till now,radio/television,2439,<100 DM,<1 years,4,none,4,real estate,35,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,0
no account,27,critical account,furniture/equipment,4526,>= 1000 DM,<1 years,4,none,2,real estate,32,store,own,2,unskilled - resident,2,yes,yes,male,divorced/separated,1
no account,10,existing credits paid back duly till now,furniture/equipment,2210,<100 DM,1<= < 4 years,2,none,2,real estate,25,bank,rent,1,unskilled - resident,1,none,yes,male,divorced/separated,0
no account,15,existing credits paid back duly till now,furniture/equipment,2221,500 <= < 1000 DM,1<= < 4 years,2,none,4,car or other,20,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,radio/television,2389,<100 DM,<1 years,4,none,1,car or other,27,store,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,12,critical account,furniture/equipment,3331,<100 DM,>=7 years,2,none,4,savings agreement/life insurance,42,store,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,36,existing credits paid back duly till now,business,7409,no savings account,>=7 years,3,none,2,savings agreement/life insurance,37,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,furniture/equipment,652,<100 DM,>=7 years,4,none,4,savings agreement/life insurance,24,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,36,delay in paying off,furniture/equipment,7678,500 <= < 1000 DM,4<= <7 years,2,none,4,car or other,40,none,own,2,skilled employee / official,1,yes,yes,female,divorced/separated,1
>= 200 DM ,6,critical account,car (new),1343,<100 DM,>=7 years,1,none,4,real estate,46,none,own,2,skilled employee / official,2,none,no,male,divorced/separated,1
<0 DM,24,critical account,business,1382,100 <= <500 DM,4<= <7 years,4,none,1,real estate,26,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,15,existing credits paid back duly till now,domestic appliances,874,no savings account,<1 years,4,none,1,real estate,24,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,furniture/equipment,3590,<100 DM,1<= < 4 years,2,co-applicant,2,savings agreement/life insurance,29,none,own,1,unskilled - resident,2,none,yes,male,divorced/separated,1
0 <= <200 DM,11,critical account,car (new),1322,>= 1000 DM,1<= < 4 years,4,none,4,car or other,40,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,18,all credits at this bank paid back duly,radio/television,1940,<100 DM,<1 years,3,co-applicant,4,unknown / no property,36,bank,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,36,existing credits paid back duly till now,radio/television,3595,<100 DM,>=7 years,4,none,2,car or other,28,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,9,existing credits paid back duly till now,car (new),1422,<100 DM,<1 years,3,none,2,unknown / no property,27,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,30,critical account,radio/television,6742,no savings account,4<= <7 years,2,none,3,savings agreement/life insurance,36,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,car (used),7814,<100 DM,4<= <7 years,3,none,3,car or other,38,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,car (used),9277,no savings account,1<= < 4 years,2,none,4,unknown / no property,48,none,for free,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,30,critical account,car (new),2181,no savings account,>=7 years,4,none,4,real estate,36,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,18,critical account,radio/television,1098,<100 DM,unemployed,4,none,4,car or other,65,none,own,2,unemployed/ unskilled  - non-resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,24,existing credits paid back duly till now,furniture/equipment,4057,<100 DM,4<= <7 years,3,none,3,car or other,43,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
<0 DM,12,existing credits paid back duly till now,education,795,<100 DM,<1 years,4,none,4,savings agreement/life insurance,53,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,24,critical account,business,2825,no savings account,4<= <7 years,4,none,3,unknown / no property,34,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
0 <= <200 DM,48,existing credits paid back duly till now,business,15672,<100 DM,1<= < 4 years,2,none,2,car or other,23,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,36,critical account,car (new),6614,<100 DM,>=7 years,4,none,4,car or other,34,none,own,2,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,28,all credits at this bank paid back duly,car (used),7824,no savings account,<1 years,3,guarantor,4,real estate,40,bank,rent,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
<0 DM,27,critical account,business,2442,<100 DM,>=7 years,4,none,4,car or other,43,store,own,4,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
no account,15,critical account,radio/television,1829,<100 DM,>=7 years,4,none,4,car or other,46,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,12,critical account,car (new),2171,<100 DM,1<= < 4 years,4,none,4,savings agreement/life insurance,38,bank,own,2,unskilled - resident,1,none,no,male,divorced/separated,1
0 <= <200 DM,36,critical account,car (used),5800,<100 DM,1<= < 4 years,3,none,4,car or other,34,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,18,critical account,radio/television,1169,no savings account,1<= < 4 years,4,none,3,savings agreement/life insurance,29,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,36,delay in paying off,car (used),8947,no savings account,4<= <7 years,3,none,2,car or other,31,store,own,1,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
<0 DM,21,existing credits paid back duly till now,radio/television,2606,<100 DM,<1 years,4,none,4,savings agreement/life insurance,28,none,rent,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
no account,12,critical account,furniture/equipment,1592,>= 1000 DM,4<= <7 years,3,none,2,savings agreement/life insurance,35,none,own,1,skilled employee / official,1,none,no,female,divorced/separated,1
no account,15,existing credits paid back duly till now,furniture/equipment,2186,no savings account,4<= <7 years,1,none,4,real estate,33,bank,rent,1,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,furniture/equipment,4153,<100 DM,1<= < 4 years,2,co-applicant,3,car or other,42,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,16,critical account,car (new),2625,<100 DM,>=7 years,2,guarantor,4,savings agreement/life insurance,43,bank,rent,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
no account,20,critical account,car (new),3485,no savings account,<1 years,2,none,4,real estate,44,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,36,critical account,car (used),10477,no savings account,>=7 years,2,none,4,unknown / no property,42,none,for free,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,15,existing credits paid back duly till now,radio/television,1386,no savings account,1<= < 4 years,4,none,2,real estate,40,none,rent,1,skilled employee / official,1,yes,yes,male,married/widowed,1
no account,24,existing credits paid back duly till now,radio/television,1278,<100 DM,>=7 years,4,none,1,real estate,36,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,radio/television,1107,<100 DM,1<= < 4 years,2,none,2,real estate,20,none,rent,1,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
<0 DM,21,existing credits paid back duly till now,car (new),3763,no savings account,4<= <7 years,2,co-applicant,2,real estate,24,none,own,1,unskilled - resident,1,none,no,male,divorced/separated,1
0 <= <200 DM,36,existing credits paid back duly till now,education,3711,no savings account,1<= < 4 years,2,none,2,car or other,27,none,own,1,skilled employee / official,1,none,yes,male,married/widowed,1
no account,15,delay in paying off,car (used),3594,<100 DM,<1 years,1,none,2,savings agreement/life insurance,46,none,own,2,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,9,existing credits paid back duly till now,car (new),3195,no savings account,1<= < 4 years,1,none,2,real estate,33,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
no account,36,delay in paying off,radio/television,4454,<100 DM,1<= < 4 years,4,none,4,real estate,34,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,24,critical account,furniture/equipment,4736,<100 DM,<1 years,2,none,4,car or other,25,bank,own,1,unskilled - resident,1,none,yes,female,divorced/separated,0
0 <= <200 DM,30,existing credits paid back duly till now,radio/television,2991,no savings account,>=7 years,2,none,4,car or other,25,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,11,existing credits paid back duly till now,business,2142,>= 1000 DM,>=7 years,1,none,2,real estate,28,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,24,all credits at this bank paid back duly,business,3161,<100 DM,1<= < 4 years,4,none,2,savings agreement/life insurance,31,none,rent,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,48,no credits taken,others,18424,<100 DM,1<= < 4 years,1,none,2,savings agreement/life insurance,32,bank,own,1,management/ highly qualified employee,1,yes,no,female,divorced/separated,0
no account,10,existing credits paid back duly till now,car (used),2848,100 <= <500 DM,1<= < 4 years,1,co-applicant,2,real estate,32,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,1
<0 DM,6,existing credits paid back duly till now,car (new),14896,<100 DM,>=7 years,1,none,4,unknown / no property,68,bank,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,furniture/equipment,2359,100 <= <500 DM,unemployed,1,none,1,savings agreement/life insurance,33,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
<0 DM,24,existing credits paid back duly till now,furniture/equipment,3345,<100 DM,>=7 years,4,none,2,savings agreement/life insurance,39,none,rent,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
no account,18,critical account,furniture/equipment,1817,<100 DM,1<= < 4 years,4,none,2,unknown / no property,28,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
no account,48,delay in paying off,radio/television,12749,500 <= < 1000 DM,4<= <7 years,4,none,1,car or other,37,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
<0 DM,9,existing credits paid back duly till now,radio/television,1366,<100 DM,<1 years,3,none,4,savings agreement/life insurance,22,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
0 <= <200 DM,12,existing credits paid back duly till now,car (new),2002,<100 DM,4<= <7 years,3,none,4,savings agreement/life insurance,30,none,rent,1,skilled employee / official,2,yes,yes,male,divorced/separated,1
<0 DM,24,all credits at this bank paid back duly,furniture/equipment,6872,<100 DM,<1 years,2,none,1,savings agreement/life insurance,55,bank,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
<0 DM,12,all credits at this bank paid back duly,car (new),697,<100 DM,<1 years,4,none,2,car or other,46,bank,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
<0 DM,18,critical account,furniture/equipment,1049,<100 DM,<1 years,4,none,4,savings agreement/life insurance,21,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,48,existing credits paid back duly till now,car (used),10297,<100 DM,4<= <7 years,4,none,4,unknown / no property,39,store,for free,3,skilled employee / official,2,yes,yes,male,divorced/separated,0
no account,30,existing credits paid back duly till now,radio/television,1867,no savings account,>=7 years,4,none,4,car or other,58,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
<0 DM,12,delay in paying off,car (new),1344,<100 DM,1<= < 4 years,4,none,2,real estate,43,none,own,2,unskilled - resident,2,none,yes,male,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,furniture/equipment,1747,<100 DM,<1 years,4,co-applicant,1,savings agreement/life insurance,24,none,own,1,unskilled - resident,1,none,no,male,divorced/separated,1
0 <= <200 DM,9,existing credits paid back duly till now,radio/television,1670,<100 DM,<1 years,4,none,2,car or other,22,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,0
no account,9,critical account,car (new),1224,<100 DM,1<= < 4 years,3,none,1,real estate,30,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,12,critical account,radio/television,522,500 <= < 1000 DM,>=7 years,4,none,4,savings agreement/life insurance,42,none,own,2,skilled employee / official,2,yes,yes,male,divorced/separated,1
<0 DM,12,existing credits paid back duly till now,radio/television,1498,<100 DM,1<= < 4 years,4,none,1,car or other,23,bank,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,30,delay in paying off,radio/television,1919,100 <= <500 DM,<1 years,4,none,3,unknown / no property,30,store,own,2,management/ highly qualified employee,1,none,yes,male,divorced/separated,0
>= 200 DM ,9,existing credits paid back duly till now,radio/television,745,<100 DM,1<= < 4 years,3,none,2,real estate,28,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,0
0 <= <200 DM,6,existing credits paid back duly till now,radio/television,2063,<100 DM,<1 years,4,none,3,car or other,30,none,rent,1,management/ highly qualified employee,1,yes,yes,male,married/widowed,1
0 <= <200 DM,60,existing credits paid back duly till now,education,6288,<100 DM,1<= < 4 years,4,none,4,unknown / no property,42,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,24,critical account,car (used),6842,no savings account,1<= < 4 years,2,none,4,savings agreement/life insurance,46,none,own,2,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,car (new),3527,no savings account,<1 years,2,none,3,savings agreement/life insurance,45,none,own,1,management/ highly qualified employee,2,yes,yes,male,divorced/separated,1
no account,10,existing credits paid back duly till now,car (new),1546,<100 DM,1<= < 4 years,3,none,2,real estate,31,none,own,1,unskilled - resident,2,none,no,male,divorced/separated,1
no account,24,existing credits paid back duly till now,furniture/equipment,929,no savings account,4<= <7 years,4,none,2,car or other,31,store,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,4,critical account,car (new),1455,<100 DM,4<= <7 years,2,none,1,real estate,42,none,own,3,unskilled - resident,2,none,yes,male,divorced/separated,1
<0 DM,15,existing credits paid back duly till now,furniture/equipment,1845,<100 DM,<1 years,4,guarantor,1,savings agreement/life insurance,46,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,48,no credits taken,car (new),8358,500 <= < 1000 DM,<1 years,1,none,1,car or other,30,none,own,2,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,24,all credits at this bank paid back duly,furniture/equipment,3349,500 <= < 1000 DM,<1 years,4,none,4,unknown / no property,30,none,for free,1,skilled employee / official,2,yes,yes,male,divorced/separated,0
no account,12,existing credits paid back duly till now,car (new),2859,no savings account,unemployed,4,none,4,unknown / no property,38,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,18,existing credits paid back duly till now,furniture/equipment,1533,<100 DM,<1 years,4,co-applicant,1,savings agreement/life insurance,43,none,own,1,unskilled - resident,2,none,yes,male,married/widowed,0
no account,24,existing credits paid back duly till now,radio/television,3621,100 <= <500 DM,>=7 years,2,none,4,car or other,31,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,0
0 <= <200 DM,18,critical account,business,3590,<100 DM,unemployed,3,none,3,car or other,40,none,own,3,unemployed/ unskilled  - non-resident,2,yes,yes,male,married/widowed,1
<0 DM,36,delay in paying off,business,2145,<100 DM,4<= <7 years,2,none,1,car or other,24,none,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,24,existing credits paid back duly till now,car (used),4113,500 <= < 1000 DM,<1 years,3,none,4,car or other,28,none,rent,1,skilled employee / official,1,none,yes,female,divorced/separated,0
no account,36,existing credits paid back duly till now,furniture/equipment,10974,<100 DM,unemployed,4,none,2,car or other,26,none,own,2,management/ highly qualified employee,1,yes,yes,female,divorced/separated,0
<0 DM,12,existing credits paid back duly till now,car (new),1893,<100 DM,1<= < 4 years,4,guarantor,4,savings agreement/life insurance,29,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
<0 DM,24,critical account,radio/television,1231,>= 1000 DM,>=7 years,4,none,4,savings agreement/life insurance,57,none,rent,2,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
>= 200 DM ,30,critical account,radio/television,3656,no savings account,>=7 years,4,none,4,savings agreement/life insurance,49,store,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
0 <= <200 DM,9,critical account,radio/television,1154,<100 DM,>=7 years,2,none,4,real estate,37,none,own,3,unskilled - resident,1,none,yes,male,divorced/separated,1
<0 DM,28,existing credits paid back duly till now,car (new),4006,<100 DM,1<= < 4 years,3,none,2,car or other,45,none,own,1,unskilled - resident,1,none,yes,male,divorced/separated,0
0 <= <200 DM,24,existing credits paid back duly till now,furniture/equipment,3069,100 <= <500 DM,>=7 years,4,none,4,unknown / no property,30,none,for free,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,6,critical account,radio/television,1740,<100 DM,>=7 years,2,none,2,real estate,30,none,rent,2,skilled employee / official,1,none,yes,male,married/widowed,1
0 <= <200 DM,21,delay in paying off,car (new),2353,<100 DM,1<= < 4 years,1,none,4,savings agreement/life insurance,47,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,15,existing credits paid back duly till now,car (new),3556,no savings account,1<= < 4 years,3,none,2,unknown / no property,29,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,radio/television,2397,500 <= < 1000 DM,>=7 years,3,none,2,car or other,35,bank,own,2,skilled employee / official,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,6,existing credits paid back duly till now,repairs,454,<100 DM,<1 years,3,none,1,savings agreement/life insurance,22,none,own,1,unskilled - resident,1,none,yes,male,married/widowed,1
0 <= <200 DM,30,existing credits paid back duly till now,radio/television,1715,no savings account,1<= < 4 years,4,none,1,car or other,26,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,27,critical account,radio/television,2520,500 <= < 1000 DM,1<= < 4 years,4,none,2,savings agreement/life insurance,23,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,0
no account,15,existing credits paid back duly till now,radio/television,3568,<100 DM,>=7 years,4,none,2,car or other,54,bank,rent,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
no account,42,existing credits paid back duly till now,radio/television,7166,no savings account,4<= <7 years,2,none,4,savings agreement/life insurance,29,none,rent,1,skilled employee / official,1,yes,yes,male,married/widowed,1
<0 DM,11,critical account,car (new),3939,<100 DM,1<= < 4 years,1,none,2,real estate,40,none,own,2,unskilled - resident,2,none,yes,male,divorced/separated,1
0 <= <200 DM,15,existing credits paid back duly till now,repairs,1514,100 <= <500 DM,1<= < 4 years,4,guarantor,2,real estate,22,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,existing credits paid back duly till now,car (new),7393,<100 DM,1<= < 4 years,1,none,4,savings agreement/life insurance,43,none,own,1,unskilled - resident,2,none,yes,male,divorced/separated,1
<0 DM,24,all credits at this bank paid back duly,car (new),1193,<100 DM,unemployed,1,co-applicant,4,unknown / no property,29,none,rent,2,unemployed/ unskilled  - non-resident,1,none,yes,female,divorced/separated,0
<0 DM,60,existing credits paid back duly till now,business,7297,<100 DM,>=7 years,4,co-applicant,4,unknown / no property,36,none,rent,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,30,critical account,radio/television,2831,<100 DM,1<= < 4 years,4,none,2,car or other,33,none,own,1,skilled employee / official,1,yes,yes,female,divorced/separated,1
>= 200 DM ,24,existing credits paid back duly till now,radio/television,1258,500 <= < 1000 DM,1<= < 4 years,3,none,3,car or other,57,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
0 <= <200 DM,6,existing credits paid back duly till now,radio/television,753,<100 DM,1<= < 4 years,2,guarantor,3,real estate,64,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
0 <= <200 DM,18,delay in paying off,business,2427,no savings account,>=7 years,4,none,2,savings agreement/life insurance,42,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,24,delay in paying off,car (new),2538,<100 DM,>=7 years,4,none,4,car or other,47,none,own,2,unskilled - resident,2,none,yes,male,divorced/separated,0
0 <= <200 DM,15,all credits at this bank paid back duly,car (new),1264,100 <= <500 DM,1<= < 4 years,2,none,2,savings agreement/life insurance,25,none,rent,1,skilled employee / official,1,none,yes,male,married/widowed,0
0 <= <200 DM,30,critical account,furniture/equipment,8386,<100 DM,4<= <7 years,2,none,2,savings agreement/life insurance,49,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,0
no account,48,existing credits paid back duly till now,business,4844,<100 DM,unemployed,3,none,2,car or other,33,bank,rent,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,0
>= 200 DM ,21,existing credits paid back duly till now,car (new),2923,100 <= <500 DM,1<= < 4 years,1,none,1,car or other,28,bank,own,1,management/ highly qualified employee,1,yes,yes,female,divorced/separated,1
<0 DM,36,existing credits paid back duly till now,car (used),8229,<100 DM,1<= < 4 years,2,none,2,savings agreement/life insurance,26,none,own,1,skilled employee / official,2,none,yes,male,divorced/separated,0
no account,24,critical account,furniture/equipment,2028,<100 DM,4<= <7 years,2,none,2,savings agreement/life insurance,30,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
<0 DM,15,critical account,furniture/equipment,1433,<100 DM,1<= < 4 years,4,none,3,savings agreement/life insurance,25,none,rent,2,skilled employee / official,1,none,yes,female,divorced/separated,1
>= 200 DM ,42,no credits taken,business,6289,<100 DM,<1 years,2,none,1,savings agreement/life insurance,33,none,own,2,skilled employee / official,1,none,yes,male,divorced/separated,1
no account,13,existing credits paid back duly till now,radio/television,1409,100 <= <500 DM,unemployed,2,none,4,real estate,64,none,own,1,skilled employee / official,1,none,yes,female,divorced/separated,1
<0 DM,24,existing credits paid back duly till now,car (used),6579,<100 DM,unemployed,4,none,2,unknown / no property,29,none,for free,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
0 <= <200 DM,24,critical account,radio/television,1743,<100 DM,>=7 years,4,none,2,savings agreement/life insurance,48,none,own,2,unskilled - resident,1,none,yes,male,divorced/separated,1
no account,12,critical account,education,3565,no savings account,<1 years,2,none,1,savings agreement/life insurance,37,none,own,2,unskilled - resident,2,none,yes,male,divorced/separated,1
no account,15,all credits at this bank paid back duly,radio/television,1569,100 <= <500 DM,>=7 years,4,none,4,car or other,34,bank,own,1,unskilled - resident,2,none,yes,male,divorced/separated,1
<0 DM,18,existing credits paid back duly till now,radio/television,1936,no savings account,4<= <7 years,2,none,4,car or other,23,none,rent,2,unskilled - resident,1,none,yes,male,married/widowed,1
<0 DM,36,existing credits paid back duly till now,furniture/equipment,3959,<100 DM,unemployed,4,none,3,savings agreement/life insurance,30,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,car (new),2390,no savings account,>=7 years,4,none,3,car or other,50,none,own,1,skilled employee / official,1,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,furniture/equipment,1736,<100 DM,4<= <7 years,3,none,4,real estate,31,none,own,1,unskilled - resident,1,none,yes,female,divorced/separated,1
<0 DM,30,existing credits paid back duly till now,car (used),3857,<100 DM,1<= < 4 years,4,none,4,savings agreement/life insurance,40,none,own,1,management/ highly qualified employee,1,yes,yes,male,divorced/separated,1
no account,12,existing credits paid back duly till now,radio/television,804,<100 DM,>=7 years,4,none,4,car or other,38,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
<0 DM,45,existing credits paid back duly till now,radio/television,1845,<100 DM,1<= < 4 years,4,none,4,unknown / no property,23,none,for free,1,skilled employee / official,1,yes,yes,male,divorced/separated,0
0 <= <200 DM,45,critical account,car (used),4576,100 <= <500 DM,unemployed,3,none,4,car or other,27,none,own,1,skilled employee / official,1,none,yes,male,divorced/separated,1
